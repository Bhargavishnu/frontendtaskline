{"version":3,"sources":["components/Home.js","components/Navbar.js","components/TaskCard.js","components/TeamCard.js","components/ArchiveCard.js","components/Dashboard.js","components/Settings.js","components/Teams.js","components/Error.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","handleSubmit","bind","state","uid","authToken","baseURL","event","preventDefault","formdata","FormData","target","sendData","URLSearchParams","get","fetch","this","method","body","then","res","status","json","data","token","userid","history","push","pathname","document","getElementById","innerHTML","getElementsByTagName","style","backgroundColor","className","marginTop","color","onSubmit","borderRadius","type","name","placeholder","id","React","Component","Navbar","class","to","href","data-toggle","data-target","role","aria-expanded","src","TaskCard","deadline","Date","due","dateStart","start","dateEnd","dateNow","totalDiffTime","Math","abs","nowDiffTime","totalDiffDays","ceil","nowDiffDays","percentDays","title","onClick","displayTask","reporter","priority","toUpperCase","toDateString","aria-valuenow","aria-valuemin","aria-valuemax","width","TeamCard","pending","total","ArchiveCard","console","log","padding","Tasks","componentDidMount","taskArray","fetchurl","url","j","i","length","taskName","taskID","taskReport","taskPriority","taskDue","taskStart","key","addTaskForm","setState","alert","Teams","teamArray","teamName","Archives","archiveArray","archiveName","Dashboard","footerLast","render","changeMode","bodyCenter","handleTaskForm","mode","location","dispForm","dispTask","getAttribute","display","d","day","getFullYear","getMonth","getDay","position","top","zIndex","height","left","overflowY","transition","float","marginBottom","multiple","value","min","addTaskToBase","modeName","downIcons","getElementsByClassName","setAttribute","headingName","displayTheTask","showForm","Settings","Error","App","customHistory","createBrowserHistory","path","component","exact","DashBoard","Boolean","window","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e683e6de.chunk.js","sourcesContent":["import React from 'react';\nimport  { Redirect } from 'react-router-dom';\n\nclass Home extends React.Component{\n  \n    \n    constructor(props) \n    {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = { uid : \"0\", authToken : \"\" ,baseURL:\"https://task-line.herokuapp.com\"};\n    }\n    \n    \n    \n    handleSubmit(event) {\n        event.preventDefault();\n        \n        const formdata = new FormData(event.target);\n        \n        const sendData = new URLSearchParams({'username': formdata.get(\"username\"),'password' : formdata.get(\"password\")});\n        \n        var  responseCode = 404;\n        \n        var username = formdata.get(\"username\");\n        \n        fetch(this.state.baseURL+\"/login\",{method: 'POST' ,body: sendData })\n        .then(res => \n              { \n            responseCode = res.status;\n      \n                if (responseCode == 200 )\n                    {\n                        return res.json(); \n                    }\n              })\n        .then( data => \n              {\n                    if ( data )\n                        {\n                            var token = data[\"token\"];\n                            var userid = data[\"id\"];\n                            this.state.uid = userid;\n                            this.state.authToken = token;\n                            this.props.history.push( {\n                                    pathname: '/dashboard',\n                                    state: { uid : this.state.uid , authToken : this.state.authToken , baseURL: this.state.baseURL }\n                                    });\n                            \n                        }\n                    else\n                    {\n                        document.getElementById(\"errorMessage\").innerHTML=\"Invalid Credentials!!!\";\n                    }\n            });\n        \n    }\n            \n            \n            \n       componentDidMount() \n    {\n        document.getElementsByTagName('body')[0].style.backgroundColor=\"black\";\n    }\n\n                \n        \n    \n    render(){\n        \n         const mystyle = {\n            marginTop:\"30vh\"\n            };\n        return(\n            <div className=\"ui middle aligned center aligned grid login-component\" style ={mystyle}>\n            <div className=\"column\" style={{color:\"firebrick\"}}>\n            <h2 className=\"ui teal image header\">\n            <div className=\"content\">\n                LOGIN FOR <div className=\"extras\">TASKS</div>\n            </div>\n            </h2>\n            <form className=\"ui large form\" onSubmit={this.handleSubmit} >\n            <div className=\"ui stacked segment\" style={{borderRadius:\"3%\",\n              backgroundColor:\"rgba(69, 62, 62, 0.5)\"}}>\n                <div className=\"field\" >\n                <div className=\"ui left icon input\">\n                <i className=\"user icon\"></i>\n                <input type=\"text\" name=\"username\" placeholder=\"Username \"/>\n                </div>\n                </div>\n                <div className=\"field \">\n                <div className=\"ui left icon input\">\n                    <i className=\"lock icon\"></i>\n                    <input type=\"password\" name=\"password\" placeholder=\"Password\"/>\n                </div>\n            </div>\n\n            \n            <button type=\"submit\" className=\"ui fluid large submit button\">LOGIN</button>\n      </div>\n    </form>\n    \n    <div id=\"errorMessage\"  style={{color:\"white\"}}></div>\n  </div>\n</div>\n            \n        )\n        \n    }\n    \n}\nexport default Home;","import React from 'react';\nimport {Link}  from 'react-router-dom';\nimport ReactDOM from 'react-dom';\n\nclass Navbar extends React.Component{\n    \n    render(){\n        return(\n            <nav class=\"navbar navbar-default navbar-fixed-top custom-header\">\n        <div class=\"container-fluid\">\n            <div class=\"navbar-header\"><Link to=\"/dashboard\" ><a class=\"navbar-brand navbar-link\" href=\"#\">Task<span class=\"text-muted title-side\">Board </span> </a></Link>\n                <button class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar-collapse\"><span class=\"sr-only\">Toggle navigation</span><span class=\"icon-bar\"></span><span class=\"icon-bar\"></span><span class=\"icon-bar\"></span></button>\n            </div>\n            <div class=\"collapse navbar-collapse\" id=\"navbar-collapse\">\n                <ul class=\"nav navbar-nav links\">\n                    <li role=\"presentation\" class=\"navbar-items\"><a href=\"#\"> </a></li>\n                </ul>\n                <ul class=\"nav navbar-nav navbar-right\">\n                    <li class=\"dropdown\">\n                        <a class=\"dropdown-toggle\" data-toggle=\"dropdown\" aria-expanded=\"false\" href=\"#\"> <span class=\"caret\"></span><img src=\"assets/img/avatar.jpg\" class=\"dropdown-image\" /></a>\n                        <ul class=\"dropdown-menu dropdown-menu-right\" role=\"menu\">\n                            <li role=\"presentation\" class=\"topbar-items\"><Link to=\"/dashboard\" >DashBoard <i class=\"glyphicon glyphicon-th\"></i></Link></li>\n                            <li role=\"presentation\"><Link to=\"/settings\" >Settings <i class=\"glyphicon glyphicon-wrench\"></i></Link></li>\n                            <li role=\"presentation\" class=\"active\"><Link to=\"/\" >Logout <i class=\"glyphicon glyphicon-off\"></i></Link></li>\n                        </ul>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </nav>  \n        );\n        \n    }\n    \n}\nexport default Navbar;","import React from 'react';\n\n\n\nclass TaskCard extends React.Component{\n    \n     constructor(props) \n    {\n        super(props);\n        this.state= {deadline : new Date(this.props.due)};\n    \n    }\n    \n    componentDidMount()\n    {\n        \n       \n        \n        \n        \n    }\n    \n    render(){\n        \n        \n        const dateStart = new Date(this.props.start);\n        const dateEnd = new Date(this.props.due);\n        const dateNow = new Date();\n        const totalDiffTime = Math.abs(dateEnd - dateStart);\n        const nowDiffTime = Math.abs(dateNow - dateStart);\n        const totalDiffDays = Math.ceil(totalDiffTime / (1000 * 60 * 60 * 24)); \n        const nowDiffDays = Math.ceil(nowDiffTime / (1000 * 60 * 60 * 24)); \n        const percentDays = ((nowDiffDays/totalDiffDays))*100;\n        if (percentDays > 100)\n            {\n                percentDays = 0\n            }\n       \n        return(\n            <div className=\"col-lg-3 col-lg-offset-0 col-md-3 col-sm-5 col-xs-10\" id=\"task-card\"  title={this.props.id} onClick={this.props.displayTask }>\n            <h4 className=\"text-left team-card-title\">{this.props.name}</h4>\n            <p>Report : {this.props.reporter} </p>\n            <span className=\"label label-primary\">Priority </span>\n            <br />\n            <br />\n            <p>{this.props.priority.toUpperCase()}</p>\n            <span className=\"label label-warning\">Deadline </span>\n            <br />\n            <br />\n            <p>{this.state.deadline.toDateString()} </p>\n            <span class=\"label label-primary\">Time Left</span>\n            <br />\n            <br />\n            <div className=\"progress\">\n                <div className=\"progress-bar progress-bar-info\" aria-valuenow={nowDiffDays} aria-valuemin=\"0\" aria-valuemax={totalDiffDays} style={{width: percentDays +\"%\"}}>{Math.ceil(percentDays)}%</div>\n            </div>\n            </div>\n        )\n        \n    }\n    \n}\n\nexport default TaskCard;","import React from 'react';\n\n\n\nclass TeamCard extends React.Component{\n    \n     constructor(props) \n    {\n        super(props);\n    \n    }\n    \n    \n    render(){\n        \n        return(\n         <div className=\"col-lg-3 col-lg-offset-0 col-md-3 col-sm-5 col-xs-10\" id=\"team-card\">\n            <h4 className=\"text-left team-card-title\">{this.props.name}</h4>\n            <p>Tasks:{this.props.pending}/ {this.props.total} </p><span class=\"label label-primary\">Current Progress </span>\n            <div className=\"progress\">\n                <div className=\"progress-bar progress-bar-info\" aria-valuenow=\"{this.props.pending}\" aria-valuemin=\"0\" aria-valuemax=\"{this.props.pending}\" style={{width: \"90%\"}}>90%</div>\n            </div>\n        </div>\n        )\n        \n    }\n    \n}\n\nexport default TeamCard;","import React from 'react';\n\n\n\nclass ArchiveCard extends React.Component{\n    \n     constructor(props) \n    {\n        super(props);\n        this.state= {deadline : new Date(this.props.due)}\n    \n    }\n    \n    \n    \n    render(){\n        \n        \n        const dateStart = new Date(this.props.start);\n        const dateEnd = new Date(this.props.due);\n        const dateNow = new Date();\n        const totalDiffTime = Math.abs(dateEnd - dateStart);\n        const nowDiffTime = Math.abs(dateNow - dateStart);\n        const totalDiffDays = Math.ceil(totalDiffTime / (1000 * 60 * 60 * 24)); \n        const nowDiffDays = Math.ceil(nowDiffTime / (1000 * 60 * 60 * 24)); \n        if ((nowDiffDays - totalDiffDays) > 2)\n            {\n                console.log(nowDiffDays,totalDiffDays)\n        return(\n            <div className=\"col-lg-3 col-lg-offset-0 col-md-3 col-sm-5 col-xs-10\" id=\"task-card\" style={{padding:\"20px\"}}>\n            <h4 className=\"text-left team-card-title\">{this.props.name}</h4>\n            <p>Report : {this.props.reporter} </p>\n            <span className=\"label label-primary\">Archived Before</span>\n            <br />\n            <br />\n            <p>{(nowDiffDays- totalDiffDays)} Days</p>\n            <span className=\"label label-warning\">Deadline </span>\n            <br />\n            <br />\n            <p>{this.state.deadline.toDateString()} </p>\n            <span class=\"label label-primary\">Status</span>\n            <br />\n            <br />\n            <p>{this.props.status}</p>\n            </div>\n    \n        )\n    }\n    else\n    {\n        return(<div></div>\n              )\n    }\n        \n    }\n    \n}\n\nexport default ArchiveCard;","import React from 'react';\nimport Navbar from './Navbar';\nimport TaskCard from './TaskCard';\nimport TeamCard from './TeamCard';\nimport ArchiveCard from './ArchiveCard';\n\n\n//**************************Taskcard Rendering\n\n\nclass Tasks extends React.Component{\n    constructor(props) {\n        super(props);\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.state = {\n            taskArray: []\n        }\n    }\n    \n    \n    \n    componentDidMount() {\n        const fetchurl = this.props.url+\"/user/\"+this.props.uid+\"/tasks/all?key=\"+this.props.token\n        //const fetchurl = \"https://task-line.herokuapp.com/user/rahul/tasks/all?key=eyJhbGciOiJIUzI1NiJ9.eyJpZCI6InJhaHVsIiwibmFtZSI6InJhaHVsIiwicm9sZSI6ImFkbWluIn0.tYUgIZXi8V4Twq_QdPC1rsfMltaqmCwZRUYhmp8hiEY\"\n            var responseCode = 0;\n            var taskArray = [];\n            var j=0\n            fetch(fetchurl)\n            .then(res => \n                  { \n                responseCode = res.status;\n\n                    if (responseCode == 200 )\n                        {\n                            return res.json(); \n                        }\n                  })\n            .then( data => \n                  {\n                        if ( data )\n                            {\n                                for( var i=0; i<data.length; i++)\n                                    {\n                                        if (data[i][\"progress\"] == this.props.type)\n                                            {\n                                                \n                                                var taskName = data[i][\"name\"].toUpperCase();\n                                                var taskID = data[i][\"id\"];\n                                                var taskReport = data[i][\"report_to\"];\n                                                var taskPriority = data[i][\"priority\"];\n                                                var taskDue = data[i][\"due_date\"];\n                                                var taskStart = data[i][\"progress_recorded_on\"];\n\n                                                taskArray.push(\n                                                    <TaskCard key={j} id={taskID} name={taskName} reporter={taskReport} priority={taskPriority} due={taskDue} start={taskStart} displayTask={this.props.displayTask} /> \n                                                              );\n                                                j++;\n\n                                            }\n\n                                    }\n                                //push Add new task as last element\n                                \n                                if (this.props.type == \"to do\")\n                                {taskArray.push(<div class=\"col-lg-3 col-lg-offset-0 col-md-3 col-sm-5 col-xs-10 add-task-card\" id=\"task-card\" onClick={this.props.addTaskForm} >\n                                        <i class=\"glyphicon glyphicon-plus\" id=\"add-task\"></i>\n                                        <h1 class=\"text-center team-card-title\">Add Task </h1>\n                                        </div>\n                                        );\n                                }\n                                    this.setState({taskArray});\n                            \n                            }\n\n                        else\n                        {\n                            alert(\"Cannot Fetch Data Try Later!!\");\n                        }\n                });\n         \n    }\n    \n    render() {\n        return <div>{this.state.taskArray}</div>\n    }\n}\n\n\n//************************************* TeamsCard Rendering\n\n\nclass Teams extends React.Component{\n    constructor(props) {\n        super(props);\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.state = {\n            teamArray: []\n        }\n    }\n    \n    componentDidMount() {\n        const fetchurl = this.props.url +\"/user/\"+this.props.uid+\"/teams/all?key=\"+this.props.token\n        //const fetchurl = \"https://task-line.herokuapp.com/user/rahul/tasks/all?key=eyJhbGciOiJIUzI1NiJ9.eyJpZCI6InJhaHVsIiwibmFtZSI6InJhaHVsIiwicm9sZSI6ImFkbWluIn0.tYUgIZXi8V4Twq_QdPC1rsfMltaqmCwZRUYhmp8hiEY\"\n            var responseCode = 0;\n            var teamArray = [];\n            fetch(fetchurl)\n            .then(res => \n                  { \n                responseCode = res.status;\n\n                    if (responseCode == 200 )\n                        {\n                            return res.json(); \n                        }\n                  })\n            .then( data => \n                  {\n                        if ( data )\n                            {\n                                for( var i=0; i<data.length; i++)\n                                    {\n                                        var teamName = data[i][\"name\"].toUpperCase();\n\n                                        teamArray.push(\n                                             <TeamCard key={i} name={teamName} total=\"20\" pending = \"5\"/> \n                                                        );\n\n                                    }\n\n                                this.setState({teamArray});\n                            }\n\n                        else\n                        {\n                            alert(\"Cannot Fetch Data Try Later!!\");\n                        }\n                });\n         \n    }\n    \n    render() {\n        return <div>{this.state.teamArray}</div>\n    }\n}\n\n\n//************************************* ArchiverCard Rendering\n\n\nclass Archives extends React.Component{\n    constructor(props) {\n        super(props);\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.state = {\n            archiveArray: []\n        }\n    }\n    \n    componentDidMount() {\n        const fetchurl = this.props.url+\"/user/\"+this.props.uid+\"/teams/all?key=\"+this.props.token\n        //const fetchurl = \"https://task-line.herokuapp.com/user/rahul/tasks/all?key=eyJhbGciOiJIUzI1NiJ9.eyJpZCI6InJhaHVsIiwibmFtZSI6InJhaHVsIiwicm9sZSI6ImFkbWluIn0.tYUgIZXi8V4Twq_QdPC1rsfMltaqmCwZRUYhmp8hiEY\"\n            var responseCode = 0;\n            var archiveArray = [];\n            fetch(fetchurl)\n            .then(res => \n                  { \n                responseCode = res.status;\n\n                    if (responseCode == 200 )\n                        {\n                            return res.json(); \n                        }\n                  })\n            .then( data => \n                  {\n                        if ( data )\n                            {\n                                for( var i=0; i<data.length; i++)\n                                    {\n                                        var archiveName = data[i][\"name\"].toUpperCase();\n\n                                        archiveArray.push(\n                                             <ArchiveCard key={i} name={archiveName} reporter=\"BHARGAV\" start=\"2020-02-01\" due=\"2020-02-05\"  status=\"Completed\"/> \n                                                        );\n\n                                    }\n\n                                this.setState({archiveArray});\n                            }\n\n                        else\n                        {\n                            alert(\"Cannot Fetch Data Try Later!!\");\n                        }\n                });\n         \n    }\n    \n    render() {\n        return <div>{this.state.archiveArray}</div>\n    }\n}\n\n\n//*************************************Main Dashboard \n\n\n\nclass Dashboard extends React.Component{\n   \n    constructor(props)\n    {\n        super(props);\n        this.footerLast = this.footerLast.bind(this);\n        this.render = this.render.bind(this);\n        this.changeMode = this.changeMode.bind(this);\n        this.bodyCenter = this.bodyCenter.bind(this);\n        this.handleTaskForm = this.handleTaskForm.bind(this);\n        this.state={mode: \"mytasks\", baseURL: this.props.location.state.baseURL , authToken : this.props.location.state.authToken , uid : this.props.location.state.uid , dispForm: false, dispTask: false};\n        \n        \n    }\n    \n    \n    \n    updateTaskBase()\n    {\n    \n    }\n    displayTheTask(event)\n    {\n        var taskID=event.target.getAttribute(\"title\");\n       alert(\"Under construction\")\n  \n    \n    }\n\n    moveTo(status)\n    {\n    \n    }\n   handleTaskForm()\n    {\n        if(this.state.dispForm == true)\n            {\n                this.state.dispForm = false;\n                console.log(this.state.dispForm)\n                document.getElementById(\"addTaskForm\").style.display=\"none\";\n                \n            }\n         else if(this.state.dispForm == false)\n            {\n                this.state.dispForm = true;\n                console.log(this.state.dispForm)\n                document.getElementById(\"addTaskForm\").style.display=\"block\";\n                \n            }\n            \n    }\n    \n    addTaskToBase()\n    {\n        alert(\"under Construction\")\n    }\n    \n    \n    showForm()\n    {\n        var d = new Date();\n        var day = d.getFullYear()+\"-\"+(d.getMonth()+1)+\"-\"+d.getDay();\n        \n        \n        return(\n        <div id=\"addTaskForm\" style={{width:\"80%\",position:\"fixed\",top:\"20vh\",zIndex:\"5\",backgroundColor:\"#0e0e0e\",height:\"70vh\",left:\"10%\",overflowY:\"scroll\",borderRadius:\"10px\",display:\"none\",transition:\"all 0.5s\"}}>\n             <button class=\"circular ui icon button\" onClick={() => this.handleTaskForm()} style={{position:\"absolute\",left:\"1%\",top:\"0\",zIndex:\"6\",float:\"left\"}}>\n                    <i class=\"icon close\"></i>\n            </button>\n            <form>\n            <div class=\"ui inverted segment\" style={{padding:\"10%\"}}>\n               \n                <h3> Add New Task</h3>\n                <div class=\"ui inverted form\">\n                    <div class=\"two fields\">\n                        <div class=\"field\">\n                        <label>Task Name</label>\n                        <input placeholder=\"Task Name\" name=\"name\" type=\"text\" />\n                        </div>\n                        <div class=\"field\">\n                        <label>Assigne Name</label>\n                        <input placeholder=\"Assignee Name\" name= \"assignee\" type=\"text\"/> \n                        </div>\n                    </div>\n                    <div class=\"field\">\n                        <label>Description</label>\n                        <textarea name=\"description\" placeholder= \"Description\" style={{marginTop: \"0px\" ,marginBottom: \"0px\", height: \"20%\"}}></textarea>\n                    </div>\n                    <div class=\"field\">\n                        <label>Priority</label>\n                        <select multiple=\"\"name=\"priority\" class=\"ui dropdown\">\n                            <option value=\"high\">High</option>\n                            <option value=\"medium\">Medium</option>\n                            <option value=\"low\">Low</option>\n                        </select>\n                    </div>\n                    <div class=\"five wide required field\">\n                        <label>DeadLine Date</label>\n                        <input type=\"date\" name=\"dueDate\" min={day} placeholder=\"Task DeadLine\" />\n                    </div>\n                    <div class=\"ui submit button\" onClick={() => this.addTaskToBase()}>Add Task</div>\n                </div>\n            </div>\n        </form>\n        </div>\n        \n        \n        )\n    }\n    \n    \n    changeMode(modeName)\n    {\n        var downIcons = document.getElementsByClassName(\"down-icon-items\");\n        if (this.state.mode == modeName )\n            {\n                return\n            }\n        for (var i=0;i<downIcons.length;i++)\n            {\n                downIcons[i].setAttribute(\"id\",\"\");\n            }\n        if ( modeName==\"teams\" )\n        {\n            downIcons[0].setAttribute(\"id\",\"present-page\");\n           this.setState({mode: modeName});\n        }\n        else if ( modeName==\"mytasks\" )\n        {\n            downIcons[1].setAttribute(\"id\",\"present-page\");\n            this.setState({mode: modeName});\n         \n        }\n        else if ( modeName==\"archives\" )\n        {\n            downIcons[2].setAttribute(\"id\",\"present-page\");\n           this.setState({mode: modeName});\n            \n            \n        }\n        else{\n            console.log(\"cannot set mode\")\n        }\n        \n    }\n    \n    footerLast() \n    {\n        \n         return(\n        <footer className=\"down-nav\">\n    \n        <div className=\"col-lg-5 col-lg-offset-1 col-md-12 down-icon-items\" onClick={() => this.changeMode(\"teams\")}><i className=\"fa fa-slideshare left-icons\"></i>\n            <p className=\"text-center\">Teams </p>\n        </div>\n        <div className=\"col-lg-5 col-lg-offset-1 col-md-12 down-icon-items\" id=\"present-page\" onClick={() => this.changeMode(\"mytasks\")} ><i className=\"fa fa-tasks left-icons\"></i>\n            <p className=\"text-center\">My Tasks</p>\n        </div>\n        <div className=\"col-lg-5 col-lg-offset-1 col-md-12 down-icon-items\" onClick={() => this.changeMode(\"archives\")} ><i className=\"fa fa-history left-icons\"></i>\n            <p className=\"text-center\">Archives </p>\n        </div>\n\n        </footer> \n         );\n        \n                    \n    }\n    \n    bodyCenter()\n    {\n        if ( this.state.mode == \"mytasks\")\n            {\n                var headingName = \"My Tasks\";\n                return(\n                    <div>\n                    <div className=\"col-md-12\">\n                        <h3>{headingName}</h3>\n                        <hr />\n                    </div>\n                    <div className=\"col-md-12\">\n                        <h5 className=\"text-info\">To-Do </h5>\n                        <hr />\n                        <div className=\"row task-row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"task-cards-container\">\n                                    <Tasks displayTask={this.displayTheTask.bind(this)} addTaskForm= {this.handleTaskForm} type=\"to do\" url={this.state.baseURL} token= {this.state.authToken} uid= {this.state.uid} />\n                                    \n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                \n            \n                    <div className=\"col-md-12\">\n                        <h5 className=\"text-info\"> In Progress</h5>\n                        <hr />\n                        <div className=\"row task-row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"task-cards-container\">\n                                    <Tasks type=\"progress\" displayTask = {this.displayTheTask.bind(this)} addTaskForm= {this.handleTaskForm} url={this.state.baseURL} token= {this.state.authToken} uid= {this.state.uid}/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n            \n                    <div className=\"col-md-12\">\n                        <h5 className=\"text-info\">Completed </h5>\n                        <hr />\n                        <div className=\"row task-row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"task-cards-container\">\n                                    <Tasks type=\"done\" displayTask = {this.displayTheTask.bind(this)} url={this.state.baseURL} token= {this.state.authToken} uid= {this.state.uid}/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    {this.showForm()}\n                    </div>\n                );\n            }\n        //for archives\n        \n        else if ( this.state.mode == \"archives\")\n            {\n                var headingName = \"Archives\";\n                return(\n                <div>\n                    <div className=\"col-md-12\">\n                        <h3>{headingName}</h3>\n                        <hr />\n                    </div>\n                    <Archives url={this.state.baseURL} token= {this.state.authToken} uid= {this.state.uid} />\n                </div>\n                    );\n            }\n        \n        //for teams\n        else if ( this.state.mode == \"teams\")\n            {\n                var headingName = \"My Teams\";\n                return(\n                <div>\n                    <div className=\"col-md-12\">\n                        <h3>{headingName}</h3>\n                        <hr />\n                    </div>\n                    \n                    <Teams url={this.state.baseURL} token= {this.state.authToken} uid= {this.state.uid} />\n                </div>\n                \n                    );\n            }\n        else\n            {\n                var headingName = \"Try Later !!\";\n                return(\n                    <div className=\"col-md-12\">\n                        <h3>{headingName}</h3>\n                        <hr />\n                    </div>\n                    );\n            }\n        \n    }\n\n\n\n    render()\n    {\n       \n        return(\n            <div style={{backgroundColor:\"#f1f1f1\"}}>\n                <Navbar></Navbar>\n                <div className=\"row\" id=\"main-row\">    \n                {this.bodyCenter()}\n                </div>\n              \n                {this.footerLast()}\n             </div>\n        );\n    }\n  \n    \n}\nexport default Dashboard;","import React from 'react';\n\n\n\nclass Settings extends React.Component{\n    \n    render(){\n        return(\n             <h1> in settings</h1>\n        )\n        \n    }\n    \n}\nexport default Settings;","import React from 'react';\n\n\n\nclass Teams extends React.Component{\n    \n    render(){\n        return(\n            <h1> in teams</h1>\n        )\n        \n    }\n    \n}\nexport default Teams;","import React from 'react';\n\n\nclass Error extends React.Component{\n    \n    render(){\n        const mystyle = {\n           position:\"absolute\",\n            top:\"40%\",\n            left:\"40%\",\n            color:\"white\"\n        };\n        return(\n            <h1 style={mystyle}>OOPS! Check URL</h1>\n        )\n        \n    }\n    \n}\nexport default Error;","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { createBrowserHistory } from \"history\";\nimport './App.css';\nimport Home from './components/Home';\nimport DashBoard from './components/Dashboard';\nimport Settings from './components/Settings';\nimport Teams from './components/Teams';\nimport Error from './components/Error';\n\n\nfunction App(){    \nconst customHistory = createBrowserHistory(); \n    \n        return(\n            <main>\n            <Switch>\n                <Route path=\"/\" history={customHistory}  component={Home} exact />\n                <Route path=\"/dashboard\" history={customHistory}  component={DashBoard} />\n                <Route path=\"/settings\" history={customHistory}  component={Settings} />\n                <Route path=\"/teams\" history={customHistory} component={Teams} />\n                <Route history={customHistory} component={Error} />\n            \n            </Switch>\n        </main>\n        );\n        \n    \n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}