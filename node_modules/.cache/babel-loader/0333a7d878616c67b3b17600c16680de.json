{"ast":null,"code":"var _jsxFileName = \"/Users/bhargavcn/taskboardproject/src/components/Dashboard.js\";\nimport React from 'react';\nimport Navbar from './Navbar';\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.footerLast = this.footerLast.bind(this);\n    this.render = this.render.bind(this);\n    this.changeMode = this.changeMode.bind(this);\n    this.state = {\n      mode: \"mytasks\",\n      baseURL: this.props.location.state.baseURL,\n      authToken: this.props.location.state.authToken,\n      uid: this.props.location.state.uid\n    };\n  }\n\n  changeMode(modeName) {\n    var downIcons = document.getElementsByClassName(\"down-icon-items\");\n\n    if (this.state.mode == modeName) {\n      return;\n    }\n\n    for (var i = 0; i < downIcons.length; i++) {\n      downIcons[i].setAttribute(\"id\", \"\");\n    }\n\n    if (modeName == \"teams\") {\n      downIcons[0].setAttribute(\"id\", \"present-page\");\n      this.state.mode = modeName;\n    } else if (modeName == \"mytasks\") {\n      downIcons[1].setAttribute(\"id\", \"present-page\");\n      this.state.mode = modeName;\n    } else if (modeName == \"archives\") {\n      downIcons[2].setAttribute(\"id\", \"present-page\");\n      this.state.mode = modeName;\n      this.render();\n    } else {\n      console.log(\"cannot set mode\");\n    }\n  }\n\n  footerLast() {\n    return React.createElement(\"footer\", {\n      className: \"down-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-5 col-lg-offset-1 col-md-12 down-icon-items\",\n      onClick: () => this.changeMode(\"teams\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-slideshare left-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Teams \")), React.createElement(\"div\", {\n      className: \"col-lg-5 col-lg-offset-1 col-md-12 down-icon-items\",\n      id: \"present-page\",\n      onClick: () => this.changeMode(\"mytasks\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-tasks left-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"My Tasks\")), React.createElement(\"div\", {\n      className: \"col-lg-5 col-lg-offset-1 col-md-12 down-icon-items\",\n      onClick: () => this.changeMode(\"archives\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-history left-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Archives \")));\n  }\n\n  taskcards() {\n    return React.createElement(\"div\", {\n      class: \"col-lg-3 col-lg-offset-0 col-md-3 col-sm-5 col-xs-10\",\n      id: \"task-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      class: \"text-left team-card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Task A\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"To-Do : 11/12 \"), React.createElement(\"span\", {\n      class: \"label label-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Priority \"), React.createElement(\"span\", {\n      class: \"label label-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Deadline \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"12/01/2020 \"), React.createElement(\"span\", {\n      class: \"label label-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Current Progress \"), React.createElement(\"div\", {\n      class: \"progress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"progress-bar progress-bar-info\",\n      \"aria-valuenow\": \"90\",\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      style: \"width: 90%;\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"90%\")));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        backgroundColor: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      id: \"main-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"My Tasks\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"text-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Pending \"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row task-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"task-cards-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.taskcards())))), this.footerLast());\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/bhargavcn/taskboardproject/src/components/Dashboard.js"],"names":["React","Navbar","Dashboard","Component","constructor","props","footerLast","bind","render","changeMode","state","mode","baseURL","location","authToken","uid","modeName","downIcons","document","getElementsByClassName","i","length","setAttribute","console","log","taskcards","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Navbar from './Navbar';\n\n\nclass Dashboard extends React.Component{\n   \n    constructor(props)\n    {\n        super(props);\n        this.footerLast = this.footerLast.bind(this);\n        this.render = this.render.bind(this);\n        this.changeMode = this.changeMode.bind(this);\n        this.state={mode: \"mytasks\", baseURL: this.props.location.state.baseURL , authToken : this.props.location.state.authToken , uid : this.props.location.state.uid};\n    }\n    \n    changeMode(modeName)\n    {\n        var downIcons = document.getElementsByClassName(\"down-icon-items\");\n        if (this.state.mode == modeName )\n            {\n                return\n            }\n        for (var i=0;i<downIcons.length;i++)\n            {\n                downIcons[i].setAttribute(\"id\",\"\");\n            }\n        if ( modeName==\"teams\" )\n        {\n            downIcons[0].setAttribute(\"id\",\"present-page\");\n            this.state.mode= modeName;\n        }\n        else if ( modeName==\"mytasks\" )\n        {\n            downIcons[1].setAttribute(\"id\",\"present-page\");\n            this.state.mode= modeName;\n         \n        }\n        else if ( modeName==\"archives\" )\n        {\n            downIcons[2].setAttribute(\"id\",\"present-page\");\n            this.state.mode= modeName;\n            this.render();\n            \n        }\n        else{\n            console.log(\"cannot set mode\")\n        }\n        \n    }\n    \n    footerLast() \n    {\n        \n         return(\n        <footer className=\"down-nav\">\n    \n        <div className=\"col-lg-5 col-lg-offset-1 col-md-12 down-icon-items\" onClick={() => this.changeMode(\"teams\")}><i className=\"fa fa-slideshare left-icons\"></i>\n            <p className=\"text-center\">Teams </p>\n        </div>\n        <div className=\"col-lg-5 col-lg-offset-1 col-md-12 down-icon-items\" id=\"present-page\" onClick={() => this.changeMode(\"mytasks\")} ><i className=\"fa fa-tasks left-icons\"></i>\n            <p className=\"text-center\">My Tasks</p>\n        </div>\n        <div className=\"col-lg-5 col-lg-offset-1 col-md-12 down-icon-items\" onClick={() => this.changeMode(\"archives\")} ><i className=\"fa fa-history left-icons\"></i>\n            <p className=\"text-center\">Archives </p>\n        </div>\n\n        </footer> \n         );\n        \n                    \n    }\n    \n    taskcards()\n    {\n        return(\n        \n        <div class=\"col-lg-3 col-lg-offset-0 col-md-3 col-sm-5 col-xs-10\" id=\"task-card\">\n            <h4 class=\"text-left team-card-title\">Task A</h4>\n            <p>To-Do : 11/12 </p>\n            <span class=\"label label-primary\">Priority </span>\n            <span class=\"label label-warning\">Deadline </span>\n            <p>12/01/2020 </p>\n            <span class=\"label label-primary\">Current Progress </span>\n            <div class=\"progress\">\n                <div class=\"progress-bar progress-bar-info\" aria-valuenow=\"90\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 90%;\">90%</div>\n            </div>\n        </div> \n        )\n    }\n\n\n\n\n    render()\n    {\n       \n        return(\n            <div style={{backgroundColor:\"white\"}}>\n            <Navbar></Navbar>\n            <div className=\"row\" id=\"main-row\">\n                <div className=\"col-md-12\">\n                    <h3>My Tasks</h3>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"col-md-12\">\n                <h5 className=\"text-info\">Pending </h5>\n                <hr />\n                <div className=\"row task-row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"task-cards-container\">\n                        {this.taskcards()}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n                {this.footerLast()}\n             </div>\n        );\n    }\n    \n}\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}