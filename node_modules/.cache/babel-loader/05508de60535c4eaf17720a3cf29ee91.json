{"ast":null,"code":"var _jsxFileName = \"/Users/bhargavcn/taskboardproject/src/components/TaskCard.js\";\nimport React from 'react';\n\nclass TaskCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      deadline: new Date(this.props.due)\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const dateStart = new Date(this.props.start);\n    const dateEnd = new Date(this.props.due);\n    const dateNow = new Date();\n    const totalDiffTime = Math.abs(dateEnd - dateStart);\n    const nowDiffTime = Math.abs(dateEnd - dateNow);\n    const totalDiffDays = Math.ceil(totalDiffTime / (1000 * 60 * 60 * 24));\n    const nowDiffDays = Math.ceil(nowDiffTime / (1000 * 60 * 60 * 24));\n    const percentDays = (1 - nowDiffDays / totalDiffDays) * 100;\n\n    if (percentDays > 100) {\n      percentDays = 0;\n    }\n\n    return React.createElement(\"div\", {\n      className: \"col-lg-3 col-lg-offset-0 col-md-3 col-sm-5 col-xs-10\",\n      id: \"task-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"text-left team-card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.props.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Report : \", this.props.reporter, \" \"), React.createElement(\"span\", {\n      className: \"label label-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Priority \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.props.priority), React.createElement(\"span\", {\n      className: \"label label-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Deadline \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.state.deadline.toDateString(), \" \"), React.createElement(\"span\", {\n      class: \"label label-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Time Left\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"progress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"progress-bar progress-bar-info\",\n      \"aria-valuenow\": nowDiffDays,\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": totalDiffDays,\n      style: {\n        width: percentDays + \"%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, Math.ceil(percentDays), \"%\")));\n  }\n\n}\n\nexport default TaskCard;","map":{"version":3,"sources":["/Users/bhargavcn/taskboardproject/src/components/TaskCard.js"],"names":["React","TaskCard","Component","constructor","props","state","deadline","Date","due","componentDidMount","render","dateStart","start","dateEnd","dateNow","totalDiffTime","Math","abs","nowDiffTime","totalDiffDays","ceil","nowDiffDays","percentDays","name","reporter","priority","toDateString","width"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\n\nclass TaskCard extends React.Component{\n    \n     constructor(props) \n    {\n        super(props);\n        this.state= {deadline : new Date(this.props.due)}\n    \n    }\n    \n    componentDidMount()\n    {\n        \n       \n        \n        \n        \n    }\n    \n    render(){\n        \n        \n        const dateStart = new Date(this.props.start);\n        const dateEnd = new Date(this.props.due);\n        const dateNow = new Date();\n        const totalDiffTime = Math.abs(dateEnd - dateStart);\n        const nowDiffTime = Math.abs(dateEnd - dateNow);\n        const totalDiffDays = Math.ceil(totalDiffTime / (1000 * 60 * 60 * 24)); \n        const nowDiffDays = Math.ceil(nowDiffTime / (1000 * 60 * 60 * 24)); \n        const percentDays = (1-(nowDiffDays/totalDiffDays))*100;\n        if (percentDays > 100)\n            {\n                percentDays = 0\n            }\n       \n        return(\n            <div className=\"col-lg-3 col-lg-offset-0 col-md-3 col-sm-5 col-xs-10\" id=\"task-card\">\n            <h4 className=\"text-left team-card-title\">{this.props.name}</h4>\n            <p>Report : {this.props.reporter} </p>\n            <span className=\"label label-primary\">Priority </span>\n            <br />\n            <br />\n            <p>{this.props.priority}</p>\n            <span className=\"label label-warning\">Deadline </span>\n            <br />\n            <br />\n            <p>{this.state.deadline.toDateString()} </p>\n            <span class=\"label label-primary\">Time Left</span>\n            <br />\n            <br />\n            <div className=\"progress\">\n                <div className=\"progress-bar progress-bar-info\" aria-valuenow={nowDiffDays} aria-valuemin=\"0\" aria-valuemax={totalDiffDays} style={{width: percentDays +\"%\"}}>{Math.ceil(percentDays)}%</div>\n            </div>\n            </div>\n        )\n        \n    }\n    \n}\n\nexport default TaskCard;"]},"metadata":{},"sourceType":"module"}