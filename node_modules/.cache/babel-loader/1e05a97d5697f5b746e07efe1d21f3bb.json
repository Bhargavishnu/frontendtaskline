{"ast":null,"code":"var _jsxFileName = \"/Users/bhargavcn/taskboardproject/src/components/Dashboard.js\";\nimport React from 'react';\nimport Navbar from './Navbar';\nimport TaskCard from './TaskCard';\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.footerLast = this.footerLast.bind(this);\n    this.render = this.render.bind(this);\n    this.changeMode = this.changeMode.bind(this);\n    this.state = {\n      mode: \"mytasks\",\n      baseURL: this.props.location.state.baseURL,\n      authToken: this.props.location.state.authToken,\n      uid: this.props.location.state.uid\n    };\n  }\n\n  changeMode(modeName) {\n    var downIcons = document.getElementsByClassName(\"down-icon-items\");\n\n    if (this.state.mode == modeName) {\n      return;\n    }\n\n    for (var i = 0; i < downIcons.length; i++) {\n      downIcons[i].setAttribute(\"id\", \"\");\n    }\n\n    if (modeName == \"teams\") {\n      downIcons[0].setAttribute(\"id\", \"present-page\");\n      this.setState({\n        mode: modeName\n      });\n    } else if (modeName == \"mytasks\") {\n      downIcons[1].setAttribute(\"id\", \"present-page\");\n      this.setState({\n        mode: modeName\n      });\n    } else if (modeName == \"archives\") {\n      downIcons[2].setAttribute(\"id\", \"present-page\");\n      this.setState({\n        mode: modeName\n      });\n    } else {\n      console.log(\"cannot set mode\");\n    }\n  }\n\n  footerLast() {\n    return React.createElement(\"footer\", {\n      className: \"down-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-5 col-lg-offset-1 col-md-12 down-icon-items\",\n      onClick: () => this.changeMode(\"teams\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-slideshare left-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Teams \")), React.createElement(\"div\", {\n      className: \"col-lg-5 col-lg-offset-1 col-md-12 down-icon-items\",\n      id: \"present-page\",\n      onClick: () => this.changeMode(\"mytasks\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-tasks left-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"My Tasks\")), React.createElement(\"div\", {\n      className: \"col-lg-5 col-lg-offset-1 col-md-12 down-icon-items\",\n      onClick: () => this.changeMode(\"archives\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-history left-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Archives \")));\n  }\n\n  taskcards() {\n    //const fetchurl=this.state.baseURL+\"/user/\"+this.state.uid+\"/tasks/all?\"+this.state.authToken ;\n    const fetchurl = \"https://task-line.herokuapp.com/user/rahul/tasks/all?key=eyJhbGciOiJIUzI1NiJ9.eyJpZCI6InJhaHVsIiwibmFtZSI6InJhaHVsIiwicm9sZSI6ImFkbWluIn0.tYUgIZXi8V4Twq_QdPC1rsfMltaqmCwZRUYhmp8hiEY\";\n    var responseCode = 0;\n    var taskArray = [];\n    fetch(fetchurl).then(res => {\n      responseCode = res.status;\n\n      if (responseCode == 200) {\n        return res.json();\n      }\n    }).then(data => {\n      if (data) {\n        var j = 0;\n\n        for (var i = 0; i < data.length; i++) {\n          if (data[i][\"progress\"] == \"to do\") {\n            var taskName = data[i][\"name\"];\n            var taskReport = data[i][\"report_to\"];\n            var taskPriority = data[i][\"priority\"];\n            var taskDue = data[i][\"due_date\"];\n            taskArray.push(React.createElement(TaskCard, {\n              key: j,\n              name: taskName,\n              reporter: taskReport,\n              priority: taskPriority,\n              due: taskDue,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 107\n              },\n              __self: this\n            }));\n            j = j + 1;\n          }\n        }\n      } else {\n        alert(\"Cannot Fetch Data Try Later!!\");\n      }\n    });\n    console.log(taskArray);\n    return taskArray;\n  }\n\n  render() {\n    var elem = this.taskcards();\n    console.log(elem);\n    return React.createElement(\"div\", {\n      style: {\n        backgroundColor: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      id: \"main-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, this.state.mode), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"text-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Pending \"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row task-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"task-cards-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, elem))))), this.footerLast());\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/bhargavcn/taskboardproject/src/components/Dashboard.js"],"names":["React","Navbar","TaskCard","Dashboard","Component","constructor","props","footerLast","bind","render","changeMode","state","mode","baseURL","location","authToken","uid","modeName","downIcons","document","getElementsByClassName","i","length","setAttribute","setState","console","log","taskcards","fetchurl","responseCode","taskArray","fetch","then","res","status","json","data","j","taskName","taskReport","taskPriority","taskDue","push","alert","elem","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Navbar from './Navbar';\nimport TaskCard from './TaskCard'\n\n\nclass Dashboard extends React.Component{\n   \n    constructor(props)\n    {\n        super(props);\n        this.footerLast = this.footerLast.bind(this);\n        this.render = this.render.bind(this);\n        this.changeMode = this.changeMode.bind(this);\n        this.state={mode: \"mytasks\", baseURL: this.props.location.state.baseURL , authToken : this.props.location.state.authToken , uid : this.props.location.state.uid};\n        \n    }\n    \n    changeMode(modeName)\n    {\n        var downIcons = document.getElementsByClassName(\"down-icon-items\");\n        if (this.state.mode == modeName )\n            {\n                return\n            }\n        for (var i=0;i<downIcons.length;i++)\n            {\n                downIcons[i].setAttribute(\"id\",\"\");\n            }\n        if ( modeName==\"teams\" )\n        {\n            downIcons[0].setAttribute(\"id\",\"present-page\");\n           this.setState({mode: modeName});\n        }\n        else if ( modeName==\"mytasks\" )\n        {\n            downIcons[1].setAttribute(\"id\",\"present-page\");\n            this.setState({mode: modeName});\n         \n        }\n        else if ( modeName==\"archives\" )\n        {\n            downIcons[2].setAttribute(\"id\",\"present-page\");\n           this.setState({mode: modeName});\n            \n            \n        }\n        else{\n            console.log(\"cannot set mode\")\n        }\n        \n    }\n    \n    footerLast() \n    {\n        \n         return(\n        <footer className=\"down-nav\">\n    \n        <div className=\"col-lg-5 col-lg-offset-1 col-md-12 down-icon-items\" onClick={() => this.changeMode(\"teams\")}><i className=\"fa fa-slideshare left-icons\"></i>\n            <p className=\"text-center\">Teams </p>\n        </div>\n        <div className=\"col-lg-5 col-lg-offset-1 col-md-12 down-icon-items\" id=\"present-page\" onClick={() => this.changeMode(\"mytasks\")} ><i className=\"fa fa-tasks left-icons\"></i>\n            <p className=\"text-center\">My Tasks</p>\n        </div>\n        <div className=\"col-lg-5 col-lg-offset-1 col-md-12 down-icon-items\" onClick={() => this.changeMode(\"archives\")} ><i className=\"fa fa-history left-icons\"></i>\n            <p className=\"text-center\">Archives </p>\n        </div>\n\n        </footer> \n         );\n        \n                    \n    }\n    \n    taskcards()\n    {\n        //const fetchurl=this.state.baseURL+\"/user/\"+this.state.uid+\"/tasks/all?\"+this.state.authToken ;\n        const fetchurl = \"https://task-line.herokuapp.com/user/rahul/tasks/all?key=eyJhbGciOiJIUzI1NiJ9.eyJpZCI6InJhaHVsIiwibmFtZSI6InJhaHVsIiwicm9sZSI6ImFkbWluIn0.tYUgIZXi8V4Twq_QdPC1rsfMltaqmCwZRUYhmp8hiEY\"\n        var responseCode = 0;\n        var taskArray = [];\n        fetch(fetchurl)\n        .then(res => \n              { \n            responseCode = res.status;\n      \n                if (responseCode == 200 )\n                    {\n                        return res.json(); \n                    }\n              })\n        .then( data => \n              {\n                    if ( data )\n                        {\n                            var j=0;\n                            for( var i=0; i<data.length; i++)\n                                {\n                                    \n                                    if (data[i][\"progress\"] == \"to do\")\n                                        {\n                                            var taskName = data[i][\"name\"];\n                                            var taskReport = data[i][\"report_to\"];\n                                            var taskPriority = data[i][\"priority\"];\n                                            var taskDue = data[i][\"due_date\"];\n                                          \n                                            taskArray.push(\n                                                <TaskCard key={j} name={taskName} reporter={taskReport} priority={taskPriority} due={taskDue} /> \n                                                          );\n                                            j=j+1;\n                                            \n                                        }\n                           \n                                }\n                        }\n                    else\n                    {\n                        alert(\"Cannot Fetch Data Try Later!!\");\n                    }\n            });\n         console.log(taskArray)\n        return(taskArray);\n    }\n\n\n\n\n    render()\n    {\n        var elem = this.taskcards()\n        console.log(elem);\n        return(\n            <div style={{backgroundColor:\"white\"}}>\n            <Navbar></Navbar>\n            <div className=\"row\" id=\"main-row\">\n                <div className=\"col-md-12\">\n                    <h3>{this.state.mode}</h3>\n                    <hr />\n                </div>\n            <div className=\"col-md-12\">\n                <h5 className=\"text-info\">Pending </h5>\n                <hr />\n                <div className=\"row task-row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"task-cards-container\">\n            {elem}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            </div>\n            \n                {this.footerLast()}\n             </div>\n        );\n    }\n    \n}\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}