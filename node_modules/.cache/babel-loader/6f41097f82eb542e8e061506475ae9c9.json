{"ast":null,"code":"var _jsxFileName = \"/Users/bhargavcn/taskboardproject/src/components/Dashboard.js\";\nimport React from 'react';\nimport Navbar from './Navbar';\nimport TaskCard from './TaskCard';\nimport TeamCard from './TeamCard';\nimport ArchiveCard from './ArchiveCard'; //**************************Taskcard Rendering\n\nclass Tasks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskArray: []\n    };\n  }\n\n  componentDidMount() {\n    //const fetchurl = {this.props.url}+\"/user/\"+{this.props.uid}+\"/tasks/all?key=\"+{this.props.token}\n    const fetchurl = \"https://task-line.herokuapp.com/user/rahul/tasks/all?key=eyJhbGciOiJIUzI1NiJ9.eyJpZCI6InJhaHVsIiwibmFtZSI6InJhaHVsIiwicm9sZSI6ImFkbWluIn0.tYUgIZXi8V4Twq_QdPC1rsfMltaqmCwZRUYhmp8hiEY\";\n    var responseCode = 0;\n    var taskArray = [];\n    var j = 0;\n    fetch(fetchurl).then(res => {\n      responseCode = res.status;\n\n      if (responseCode == 200) {\n        return res.json();\n      }\n    }).then(data => {\n      if (data) {\n        for (var i = 0; i < data.length; i++) {\n          if (data[i][\"progress\"] == this.props.type) {\n            var taskName = data[i][\"name\"].toUpperCase();\n            var taskReport = data[i][\"report_to\"];\n            var taskPriority = data[i][\"priority\"];\n            var taskDue = data[i][\"due_date\"];\n            var taskStart = data[i][\"progress_recorded_on\"];\n            taskArray.push(React.createElement(TaskCard, {\n              key: j,\n              name: taskName,\n              reporter: taskReport,\n              priority: taskPriority,\n              due: taskDue,\n              start: taskStart,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 55\n              },\n              __self: this\n            }));\n            j++;\n          }\n        } //push Add new task as last element\n\n\n        if (this.props.type == \"to do\") {\n          taskArray.push(React.createElement(\"div\", {\n            class: \"col-lg-3 col-lg-offset-0 col-md-3 col-sm-5 col-xs-10 add-task-card\",\n            id: \"task-card\",\n            onClick: this.props.addTaskForm,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            class: \"glyphicon glyphicon-plus\",\n            id: \"add-task\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }), React.createElement(\"h1\", {\n            class: \"text-center team-card-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }, \"Add Task \")));\n        }\n\n        this.setState({\n          taskArray\n        });\n      } else {\n        alert(\"Cannot Fetch Data Try Later!!\");\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.state.taskArray);\n  }\n\n} //************************************* TeamsCard Rendering\n\n\nclass Teams extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      teamArray: []\n    };\n  }\n\n  componentDidMount() {\n    //const fetchurl = {this.props.url}+\"/user/\"+{this.props.uid}+\"/teams/all?key=\"+{this.props.token}\n    const fetchurl = \"https://task-line.herokuapp.com/user/rahul/tasks/all?key=eyJhbGciOiJIUzI1NiJ9.eyJpZCI6InJhaHVsIiwibmFtZSI6InJhaHVsIiwicm9sZSI6ImFkbWluIn0.tYUgIZXi8V4Twq_QdPC1rsfMltaqmCwZRUYhmp8hiEY\";\n    var responseCode = 0;\n    var teamArray = [];\n    fetch(fetchurl).then(res => {\n      responseCode = res.status;\n\n      if (responseCode == 200) {\n        return res.json();\n      }\n    }).then(data => {\n      if (data) {\n        for (var i = 0; i < data.length; i++) {\n          var teamName = data[i][\"name\"].toUpperCase();\n          teamArray.push(React.createElement(TeamCard, {\n            key: i,\n            name: teamName,\n            total: \"20\",\n            pending: \"5\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }));\n        }\n\n        this.setState({\n          teamArray\n        });\n      } else {\n        alert(\"Cannot Fetch Data Try Later!!\");\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, this.state.teamArray);\n  }\n\n} //************************************* TeamsCard Rendering\n\n\nclass Archives extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      archiveArray: []\n    };\n  }\n\n  componentDidMount() {\n    //const fetchurl = {this.props.url}+\"/user/\"+{this.props.uid}+\"/teams/all?key=\"+{this.props.token}\n    const fetchurl = \"https://task-line.herokuapp.com/user/rahul/tasks/all?key=eyJhbGciOiJIUzI1NiJ9.eyJpZCI6InJhaHVsIiwibmFtZSI6InJhaHVsIiwicm9sZSI6ImFkbWluIn0.tYUgIZXi8V4Twq_QdPC1rsfMltaqmCwZRUYhmp8hiEY\";\n    var responseCode = 0;\n    var archiveArray = [];\n    fetch(fetchurl).then(res => {\n      responseCode = res.status;\n\n      if (responseCode == 200) {\n        return res.json();\n      }\n    }).then(data => {\n      if (data) {\n        for (var i = 0; i < data.length; i++) {\n          var archiveName = data[i][\"name\"].toUpperCase();\n          archiveArray.push(React.createElement(ArchiveCard, {\n            key: i,\n            name: archiveName,\n            reporter: \"BHARGAV\",\n            start: \"2020-02-01\",\n            due: \"2020-02-05\",\n            status: \"Completed\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181\n            },\n            __self: this\n          }));\n        }\n\n        this.setState({\n          archiveArray\n        });\n      } else {\n        alert(\"Cannot Fetch Data Try Later!!\");\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, this.state.archiveArray);\n  }\n\n} //*************************************Main DAshboard \n\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.footerLast = this.footerLast.bind(this);\n    this.render = this.render.bind(this);\n    this.changeMode = this.changeMode.bind(this);\n    this.bodyCenter = this.bodyCenter.bind(this);\n    this.state = {\n      mode: \"mytasks\",\n      baseURL: this.props.location.state.baseURL,\n      authToken: this.props.location.state.authToken,\n      uid: this.props.location.state.uid,\n      dispForm: false\n    };\n  }\n\n  handleTaskForm() {\n    if (this.state.dispForm == true) {\n      this.state.dispForm = false;\n      console.log(this.state.dispForm);\n    } else if (this.state.dispForm == false) {\n      this.state.dispForm = true;\n      console.log(this.state.dispForm);\n    }\n  }\n\n  changeMode(modeName) {\n    var downIcons = document.getElementsByClassName(\"down-icon-items\");\n\n    if (this.state.mode == modeName) {\n      return;\n    }\n\n    for (var i = 0; i < downIcons.length; i++) {\n      downIcons[i].setAttribute(\"id\", \"\");\n    }\n\n    if (modeName == \"teams\") {\n      downIcons[0].setAttribute(\"id\", \"present-page\");\n      this.setState({\n        mode: modeName\n      });\n    } else if (modeName == \"mytasks\") {\n      downIcons[1].setAttribute(\"id\", \"present-page\");\n      this.setState({\n        mode: modeName\n      });\n    } else if (modeName == \"archives\") {\n      downIcons[2].setAttribute(\"id\", \"present-page\");\n      this.setState({\n        mode: modeName\n      });\n    } else {\n      console.log(\"cannot set mode\");\n    }\n  }\n\n  footerLast() {\n    return React.createElement(\"footer\", {\n      className: \"down-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-5 col-lg-offset-1 col-md-12 down-icon-items\",\n      onClick: () => this.changeMode(\"teams\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-slideshare left-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \"Teams \")), React.createElement(\"div\", {\n      className: \"col-lg-5 col-lg-offset-1 col-md-12 down-icon-items\",\n      id: \"present-page\",\n      onClick: () => this.changeMode(\"mytasks\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-tasks left-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \"My Tasks\")), React.createElement(\"div\", {\n      className: \"col-lg-5 col-lg-offset-1 col-md-12 down-icon-items\",\n      onClick: () => this.changeMode(\"archives\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-history left-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \"Archives \")));\n  }\n\n  bodyCenter() {\n    if (this.state.mode == \"mytasks\") {\n      var headingName = \"My Tasks\";\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, headingName), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, \"To-Do \"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row task-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"task-cards-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(Tasks, {\n        addTaskForm: this.handleTaskForm,\n        type: \"to do\",\n        url: this.state.baseURL,\n        token: this.state.authToken,\n        uid: this.state.uid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, \" In Progress\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row task-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"task-cards-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(Tasks, {\n        type: \"progress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, \"Completed \"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row task-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"task-cards-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, React.createElement(Tasks, {\n        type: \"done\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }))))));\n    } //for archives\n    else if (this.state.mode == \"archives\") {\n        var headingName = \"Archives\";\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-md-12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353\n          },\n          __self: this\n        }, headingName), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354\n          },\n          __self: this\n        })), React.createElement(Archives, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356\n          },\n          __self: this\n        }));\n      } //for teams\n      else if (this.state.mode == \"teams\") {\n          var headingName = \"My Teams\";\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 366\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"col-md-12\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 367\n            },\n            __self: this\n          }, React.createElement(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 368\n            },\n            __self: this\n          }, headingName), React.createElement(\"hr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 369\n            },\n            __self: this\n          })), React.createElement(Teams, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 372\n            },\n            __self: this\n          }));\n        } else {\n          var headingName = \"Try Later !!\";\n          return React.createElement(\"div\", {\n            className: \"col-md-12\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 381\n            },\n            __self: this\n          }, React.createElement(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 382\n            },\n            __self: this\n          }, headingName), React.createElement(\"hr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 383\n            },\n            __self: this\n          }));\n        }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        backgroundColor: \"#f1f1f1\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      id: \"main-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, this.bodyCenter()), this.footerLast());\n  }\n\n  componentDidUpdate() {}\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/bhargavcn/taskboardproject/src/components/Dashboard.js"],"names":["React","Navbar","TaskCard","TeamCard","ArchiveCard","Tasks","Component","constructor","props","state","taskArray","componentDidMount","fetchurl","responseCode","j","fetch","then","res","status","json","data","i","length","type","taskName","toUpperCase","taskReport","taskPriority","taskDue","taskStart","push","addTaskForm","setState","alert","render","Teams","teamArray","teamName","Archives","archiveArray","archiveName","Dashboard","footerLast","bind","changeMode","bodyCenter","mode","baseURL","location","authToken","uid","dispForm","handleTaskForm","console","log","modeName","downIcons","document","getElementsByClassName","setAttribute","headingName","backgroundColor","componentDidUpdate"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CAGA;;AAGA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AADF,KAAb;AAGH;;AAMDC,EAAAA,iBAAiB,GAAG;AAChB;AACA,UAAMC,QAAQ,GAAG,uLAAjB;AACI,QAAIC,YAAY,GAAG,CAAnB;AACA,QAAIH,SAAS,GAAG,EAAhB;AACA,QAAII,CAAC,GAAC,CAAN;AACAC,IAAAA,KAAK,CAACH,QAAD,CAAL,CACCI,IADD,CACMC,GAAG,IACH;AACFJ,MAAAA,YAAY,GAAGI,GAAG,CAACC,MAAnB;;AAEI,UAAIL,YAAY,IAAI,GAApB,EACI;AACI,eAAOI,GAAG,CAACE,IAAJ,EAAP;AACH;AACN,KATP,EAUCH,IAVD,CAUOI,IAAI,IACL;AACM,UAAKA,IAAL,EACI;AACI,aAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACD,IAAI,CAACE,MAArB,EAA6BD,CAAC,EAA9B,EACI;AACI,cAAID,IAAI,CAACC,CAAD,CAAJ,CAAQ,UAAR,KAAuB,KAAKb,KAAL,CAAWe,IAAtC,EACI;AAEI,gBAAIC,QAAQ,GAAGJ,IAAI,CAACC,CAAD,CAAJ,CAAQ,MAAR,EAAgBI,WAAhB,EAAf;AACA,gBAAIC,UAAU,GAAGN,IAAI,CAACC,CAAD,CAAJ,CAAQ,WAAR,CAAjB;AACA,gBAAIM,YAAY,GAAGP,IAAI,CAACC,CAAD,CAAJ,CAAQ,UAAR,CAAnB;AACA,gBAAIO,OAAO,GAAGR,IAAI,CAACC,CAAD,CAAJ,CAAQ,UAAR,CAAd;AACA,gBAAIQ,SAAS,GAAGT,IAAI,CAACC,CAAD,CAAJ,CAAQ,sBAAR,CAAhB;AAEAX,YAAAA,SAAS,CAACoB,IAAV,CACI,oBAAC,QAAD;AAAU,cAAA,GAAG,EAAEhB,CAAf;AAAkB,cAAA,IAAI,EAAEU,QAAxB;AAAkC,cAAA,QAAQ,EAAEE,UAA5C;AAAwD,cAAA,QAAQ,EAAEC,YAAlE;AAAgF,cAAA,GAAG,EAAEC,OAArF;AAA8F,cAAA,KAAK,EAAEC,SAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAGAf,YAAAA,CAAC;AAEJ;AAER,SAnBT,CAoBI;;;AAEA,YAAI,KAAKN,KAAL,CAAWe,IAAX,IAAmB,OAAvB,EACA;AAACb,UAAAA,SAAS,CAACoB,IAAV,CAAe;AAAK,YAAA,KAAK,EAAC,oEAAX;AAAgF,YAAA,EAAE,EAAC,WAAnF;AAA+F,YAAA,OAAO,EAAE,KAAKtB,KAAL,CAAWuB,WAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACR;AAAG,YAAA,KAAK,EAAC,0BAAT;AAAoC,YAAA,EAAE,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,EAER;AAAI,YAAA,KAAK,EAAC,6BAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFQ,CAAf;AAKA;;AACG,aAAKC,QAAL,CAAc;AAACtB,UAAAA;AAAD,SAAd;AAEP,OAhCL,MAmCA;AACIuB,QAAAA,KAAK,CAAC,+BAAD,CAAL;AACH;AACR,KAlDL;AAoDP;;AAEDC,EAAAA,MAAM,GAAG;AACL,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKzB,KAAL,CAAWC,SAAjB,CAAP;AACH;;AA1E8B,C,CA8EnC;;;AAGA,MAAMyB,KAAN,SAAoBnC,KAAK,CAACM,SAA1B,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACT2B,MAAAA,SAAS,EAAE;AADF,KAAb;AAGH;;AAEDzB,EAAAA,iBAAiB,GAAG;AAChB;AACA,UAAMC,QAAQ,GAAG,uLAAjB;AACI,QAAIC,YAAY,GAAG,CAAnB;AACA,QAAIuB,SAAS,GAAG,EAAhB;AACArB,IAAAA,KAAK,CAACH,QAAD,CAAL,CACCI,IADD,CACMC,GAAG,IACH;AACFJ,MAAAA,YAAY,GAAGI,GAAG,CAACC,MAAnB;;AAEI,UAAIL,YAAY,IAAI,GAApB,EACI;AACI,eAAOI,GAAG,CAACE,IAAJ,EAAP;AACH;AACN,KATP,EAUCH,IAVD,CAUOI,IAAI,IACL;AACM,UAAKA,IAAL,EACI;AACI,aAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACD,IAAI,CAACE,MAArB,EAA6BD,CAAC,EAA9B,EACI;AACI,cAAIgB,QAAQ,GAAGjB,IAAI,CAACC,CAAD,CAAJ,CAAQ,MAAR,EAAgBI,WAAhB,EAAf;AAEAW,UAAAA,SAAS,CAACN,IAAV,CACK,oBAAC,QAAD;AAAU,YAAA,GAAG,EAAET,CAAf;AAAkB,YAAA,IAAI,EAAEgB,QAAxB;AAAkC,YAAA,KAAK,EAAC,IAAxC;AAA6C,YAAA,OAAO,EAAG,GAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADL;AAIH;;AAEL,aAAKL,QAAL,CAAc;AAACI,UAAAA;AAAD,SAAd;AACH,OAbL,MAgBA;AACIH,QAAAA,KAAK,CAAC,+BAAD,CAAL;AACH;AACR,KA/BL;AAiCP;;AAEDC,EAAAA,MAAM,GAAG;AACL,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKzB,KAAL,CAAW2B,SAAjB,CAAP;AACH;;AAlD8B,C,CAsDnC;;;AAGA,MAAME,QAAN,SAAuBtC,KAAK,CAACM,SAA7B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACT8B,MAAAA,YAAY,EAAE;AADL,KAAb;AAGH;;AAED5B,EAAAA,iBAAiB,GAAG;AAChB;AACA,UAAMC,QAAQ,GAAG,uLAAjB;AACI,QAAIC,YAAY,GAAG,CAAnB;AACA,QAAI0B,YAAY,GAAG,EAAnB;AACAxB,IAAAA,KAAK,CAACH,QAAD,CAAL,CACCI,IADD,CACMC,GAAG,IACH;AACFJ,MAAAA,YAAY,GAAGI,GAAG,CAACC,MAAnB;;AAEI,UAAIL,YAAY,IAAI,GAApB,EACI;AACI,eAAOI,GAAG,CAACE,IAAJ,EAAP;AACH;AACN,KATP,EAUCH,IAVD,CAUOI,IAAI,IACL;AACM,UAAKA,IAAL,EACI;AACI,aAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACD,IAAI,CAACE,MAArB,EAA6BD,CAAC,EAA9B,EACI;AACI,cAAImB,WAAW,GAAGpB,IAAI,CAACC,CAAD,CAAJ,CAAQ,MAAR,EAAgBI,WAAhB,EAAlB;AAEAc,UAAAA,YAAY,CAACT,IAAb,CACK,oBAAC,WAAD;AAAa,YAAA,GAAG,EAAET,CAAlB;AAAqB,YAAA,IAAI,EAAEmB,WAA3B;AAAwC,YAAA,QAAQ,EAAC,SAAjD;AAA2D,YAAA,KAAK,EAAC,YAAjE;AAA8E,YAAA,GAAG,EAAC,YAAlF;AAAgG,YAAA,MAAM,EAAC,WAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADL;AAIH;;AAEL,aAAKR,QAAL,CAAc;AAACO,UAAAA;AAAD,SAAd;AACH,OAbL,MAgBA;AACIN,QAAAA,KAAK,CAAC,+BAAD,CAAL;AACH;AACR,KA/BL;AAiCP;;AAEDC,EAAAA,MAAM,GAAG;AACL,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKzB,KAAL,CAAW8B,YAAjB,CAAP;AACH;;AAlDiC,C,CAsDtC;;;AAIA,MAAME,SAAN,SAAwBzC,KAAK,CAACM,SAA9B,CAAuC;AAEnCC,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;AACA,SAAKkC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKT,MAAL,GAAc,KAAKA,MAAL,CAAYS,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKlC,KAAL,GAAW;AAACqC,MAAAA,IAAI,EAAE,SAAP;AAAkBC,MAAAA,OAAO,EAAE,KAAKvC,KAAL,CAAWwC,QAAX,CAAoBvC,KAApB,CAA0BsC,OAArD;AAA+DE,MAAAA,SAAS,EAAG,KAAKzC,KAAL,CAAWwC,QAAX,CAAoBvC,KAApB,CAA0BwC,SAArG;AAAiHC,MAAAA,GAAG,EAAG,KAAK1C,KAAL,CAAWwC,QAAX,CAAoBvC,KAApB,CAA0ByC,GAAjJ;AAAuJC,MAAAA,QAAQ,EAAE;AAAjK,KAAX;AAGH;;AAEFC,EAAAA,cAAc,GACb;AACI,QAAG,KAAK3C,KAAL,CAAW0C,QAAX,IAAuB,IAA1B,EACI;AACI,WAAK1C,KAAL,CAAW0C,QAAX,GAAsB,KAAtB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK7C,KAAL,CAAW0C,QAAvB;AACH,KAJL,MAKM,IAAG,KAAK1C,KAAL,CAAW0C,QAAX,IAAuB,KAA1B,EACF;AACI,WAAK1C,KAAL,CAAW0C,QAAX,GAAsB,IAAtB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK7C,KAAL,CAAW0C,QAAvB;AACH;AAER;;AAGDP,EAAAA,UAAU,CAACW,QAAD,EACV;AACI,QAAIC,SAAS,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,iBAAhC,CAAhB;;AACA,QAAI,KAAKjD,KAAL,CAAWqC,IAAX,IAAmBS,QAAvB,EACI;AACI;AACH;;AACL,SAAK,IAAIlC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACmC,SAAS,CAAClC,MAAzB,EAAgCD,CAAC,EAAjC,EACI;AACImC,MAAAA,SAAS,CAACnC,CAAD,CAAT,CAAasC,YAAb,CAA0B,IAA1B,EAA+B,EAA/B;AACH;;AACL,QAAKJ,QAAQ,IAAE,OAAf,EACA;AACIC,MAAAA,SAAS,CAAC,CAAD,CAAT,CAAaG,YAAb,CAA0B,IAA1B,EAA+B,cAA/B;AACD,WAAK3B,QAAL,CAAc;AAACc,QAAAA,IAAI,EAAES;AAAP,OAAd;AACF,KAJD,MAKK,IAAKA,QAAQ,IAAE,SAAf,EACL;AACIC,MAAAA,SAAS,CAAC,CAAD,CAAT,CAAaG,YAAb,CAA0B,IAA1B,EAA+B,cAA/B;AACA,WAAK3B,QAAL,CAAc;AAACc,QAAAA,IAAI,EAAES;AAAP,OAAd;AAEH,KALI,MAMA,IAAKA,QAAQ,IAAE,UAAf,EACL;AACIC,MAAAA,SAAS,CAAC,CAAD,CAAT,CAAaG,YAAb,CAA0B,IAA1B,EAA+B,cAA/B;AACD,WAAK3B,QAAL,CAAc;AAACc,QAAAA,IAAI,EAAES;AAAP,OAAd;AAGF,KANI,MAOD;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH;AAEJ;;AAEDZ,EAAAA,UAAU,GACV;AAEK,WACD;AAAQ,MAAA,SAAS,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAK,MAAA,SAAS,EAAC,oDAAf;AAAoE,MAAA,OAAO,EAAE,MAAM,KAAKE,UAAL,CAAgB,OAAhB,CAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6G;AAAG,MAAA,SAAS,EAAC,6BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7G,EACI;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAFA,EAKA;AAAK,MAAA,SAAS,EAAC,oDAAf;AAAoE,MAAA,EAAE,EAAC,cAAvE;AAAsF,MAAA,OAAO,EAAE,MAAM,KAAKA,UAAL,CAAgB,SAAhB,CAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkI;AAAG,MAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlI,EACI;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CALA,EAQA;AAAK,MAAA,SAAS,EAAC,oDAAf;AAAoE,MAAA,OAAO,EAAE,MAAM,KAAKA,UAAL,CAAgB,UAAhB,CAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiH;AAAG,MAAA,SAAS,EAAC,0BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjH,EACI;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CARA,CADC;AAiBJ;;AAEDC,EAAAA,UAAU,GACV;AACI,QAAK,KAAKpC,KAAL,CAAWqC,IAAX,IAAmB,SAAxB,EACI;AACI,UAAIc,WAAW,GAAG,UAAlB;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,WAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADA,EAKA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,WAAW,EAAG,KAAKR,cAA1B;AAA0C,QAAA,IAAI,EAAC,OAA/C;AAAuD,QAAA,GAAG,EAAE,KAAK3C,KAAL,CAAWsC,OAAvE;AAAgF,QAAA,KAAK,EAAG,KAAKtC,KAAL,CAAWwC,SAAnG;AAA8G,QAAA,GAAG,EAAG,KAAKxC,KAAL,CAAWyC,GAA/H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ,CAHJ,CALA,EAmBA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ,CAHJ,CAnBA,EA+BA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ,CAHJ,CA/BA,CADJ;AA6CH,KAhDL,CAiDA;AAjDA,SAmDK,IAAK,KAAKzC,KAAL,CAAWqC,IAAX,IAAmB,UAAxB,EACD;AACI,YAAIc,WAAW,GAAG,UAAlB;AACA,eACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,WAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CADJ,EAKI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALJ,CADA;AASH,OAZA,CAcL;AAdK,WAeA,IAAK,KAAKnD,KAAL,CAAWqC,IAAX,IAAmB,OAAxB,EACD;AACI,cAAIc,WAAW,GAAG,UAAlB;AACA,iBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKA,WAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CADJ,EAMI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,CADA;AAWH,SAdA,MAgBD;AACI,cAAIA,WAAW,GAAG,cAAlB;AACA,iBACI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKA,WAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CADJ;AAMH;AAER;;AAID1B,EAAAA,MAAM,GACN;AAEI,WACI;AAAK,MAAA,KAAK,EAAE;AAAC2B,QAAAA,eAAe,EAAC;AAAjB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,EAAE,EAAC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKhB,UAAL,EADD,CAFJ,EAKK,KAAKH,UAAL,EALL,CADJ;AASH;;AACDoB,EAAAA,kBAAkB,GAClB,CAEC;;AAzMkC;;AA4MvC,eAAerB,SAAf","sourcesContent":["import React from 'react';\nimport Navbar from './Navbar';\nimport TaskCard from './TaskCard';\nimport TeamCard from './TeamCard';\nimport ArchiveCard from './ArchiveCard';\n\n\n//**************************Taskcard Rendering\n\n\nclass Tasks extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            taskArray: []\n        }\n    }\n    \n    \n    \n    \n    \n    componentDidMount() {\n        //const fetchurl = {this.props.url}+\"/user/\"+{this.props.uid}+\"/tasks/all?key=\"+{this.props.token}\n        const fetchurl = \"https://task-line.herokuapp.com/user/rahul/tasks/all?key=eyJhbGciOiJIUzI1NiJ9.eyJpZCI6InJhaHVsIiwibmFtZSI6InJhaHVsIiwicm9sZSI6ImFkbWluIn0.tYUgIZXi8V4Twq_QdPC1rsfMltaqmCwZRUYhmp8hiEY\"\n            var responseCode = 0;\n            var taskArray = [];\n            var j=0\n            fetch(fetchurl)\n            .then(res => \n                  { \n                responseCode = res.status;\n\n                    if (responseCode == 200 )\n                        {\n                            return res.json(); \n                        }\n                  })\n            .then( data => \n                  {\n                        if ( data )\n                            {\n                                for( var i=0; i<data.length; i++)\n                                    {\n                                        if (data[i][\"progress\"] == this.props.type)\n                                            {\n                                                \n                                                var taskName = data[i][\"name\"].toUpperCase();\n                                                var taskReport = data[i][\"report_to\"];\n                                                var taskPriority = data[i][\"priority\"];\n                                                var taskDue = data[i][\"due_date\"];\n                                                var taskStart = data[i][\"progress_recorded_on\"];\n\n                                                taskArray.push(\n                                                    <TaskCard key={j} name={taskName} reporter={taskReport} priority={taskPriority} due={taskDue} start={taskStart} /> \n                                                              );\n                                                j++;\n\n                                            }\n\n                                    }\n                                //push Add new task as last element\n                                \n                                if (this.props.type == \"to do\")\n                                {taskArray.push(<div class=\"col-lg-3 col-lg-offset-0 col-md-3 col-sm-5 col-xs-10 add-task-card\" id=\"task-card\" onClick={this.props.addTaskForm} >\n                                        <i class=\"glyphicon glyphicon-plus\" id=\"add-task\"></i>\n                                        <h1 class=\"text-center team-card-title\">Add Task </h1>\n                                        </div>\n                                        );\n                                }\n                                    this.setState({taskArray});\n                            \n                            }\n\n                        else\n                        {\n                            alert(\"Cannot Fetch Data Try Later!!\");\n                        }\n                });\n         \n    }\n    \n    render() {\n        return <div>{this.state.taskArray}</div>\n    }\n}\n\n\n//************************************* TeamsCard Rendering\n\n\nclass Teams extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            teamArray: []\n        }\n    }\n    \n    componentDidMount() {\n        //const fetchurl = {this.props.url}+\"/user/\"+{this.props.uid}+\"/teams/all?key=\"+{this.props.token}\n        const fetchurl = \"https://task-line.herokuapp.com/user/rahul/tasks/all?key=eyJhbGciOiJIUzI1NiJ9.eyJpZCI6InJhaHVsIiwibmFtZSI6InJhaHVsIiwicm9sZSI6ImFkbWluIn0.tYUgIZXi8V4Twq_QdPC1rsfMltaqmCwZRUYhmp8hiEY\"\n            var responseCode = 0;\n            var teamArray = [];\n            fetch(fetchurl)\n            .then(res => \n                  { \n                responseCode = res.status;\n\n                    if (responseCode == 200 )\n                        {\n                            return res.json(); \n                        }\n                  })\n            .then( data => \n                  {\n                        if ( data )\n                            {\n                                for( var i=0; i<data.length; i++)\n                                    {\n                                        var teamName = data[i][\"name\"].toUpperCase();\n\n                                        teamArray.push(\n                                             <TeamCard key={i} name={teamName} total=\"20\" pending = \"5\"/> \n                                                        );\n\n                                    }\n\n                                this.setState({teamArray});\n                            }\n\n                        else\n                        {\n                            alert(\"Cannot Fetch Data Try Later!!\");\n                        }\n                });\n         \n    }\n    \n    render() {\n        return <div>{this.state.teamArray}</div>\n    }\n}\n\n\n//************************************* TeamsCard Rendering\n\n\nclass Archives extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            archiveArray: []\n        }\n    }\n    \n    componentDidMount() {\n        //const fetchurl = {this.props.url}+\"/user/\"+{this.props.uid}+\"/teams/all?key=\"+{this.props.token}\n        const fetchurl = \"https://task-line.herokuapp.com/user/rahul/tasks/all?key=eyJhbGciOiJIUzI1NiJ9.eyJpZCI6InJhaHVsIiwibmFtZSI6InJhaHVsIiwicm9sZSI6ImFkbWluIn0.tYUgIZXi8V4Twq_QdPC1rsfMltaqmCwZRUYhmp8hiEY\"\n            var responseCode = 0;\n            var archiveArray = [];\n            fetch(fetchurl)\n            .then(res => \n                  { \n                responseCode = res.status;\n\n                    if (responseCode == 200 )\n                        {\n                            return res.json(); \n                        }\n                  })\n            .then( data => \n                  {\n                        if ( data )\n                            {\n                                for( var i=0; i<data.length; i++)\n                                    {\n                                        var archiveName = data[i][\"name\"].toUpperCase();\n\n                                        archiveArray.push(\n                                             <ArchiveCard key={i} name={archiveName} reporter=\"BHARGAV\" start=\"2020-02-01\" due=\"2020-02-05\"  status=\"Completed\"/> \n                                                        );\n\n                                    }\n\n                                this.setState({archiveArray});\n                            }\n\n                        else\n                        {\n                            alert(\"Cannot Fetch Data Try Later!!\");\n                        }\n                });\n         \n    }\n    \n    render() {\n        return <div>{this.state.archiveArray}</div>\n    }\n}\n\n\n//*************************************Main DAshboard \n\n\n\nclass Dashboard extends React.Component{\n   \n    constructor(props)\n    {\n        super(props);\n        this.footerLast = this.footerLast.bind(this);\n        this.render = this.render.bind(this);\n        this.changeMode = this.changeMode.bind(this);\n        this.bodyCenter = this.bodyCenter.bind(this);\n        this.state={mode: \"mytasks\", baseURL: this.props.location.state.baseURL , authToken : this.props.location.state.authToken , uid : this.props.location.state.uid , dispForm: false};\n        \n        \n    }\n    \n   handleTaskForm()\n    {\n        if(this.state.dispForm == true)\n            {\n                this.state.dispForm = false;\n                console.log(this.state.dispForm)\n            }\n         else if(this.state.dispForm == false)\n            {\n                this.state.dispForm = true;\n                console.log(this.state.dispForm)\n            }\n            \n    }\n    \n    \n    changeMode(modeName)\n    {\n        var downIcons = document.getElementsByClassName(\"down-icon-items\");\n        if (this.state.mode == modeName )\n            {\n                return\n            }\n        for (var i=0;i<downIcons.length;i++)\n            {\n                downIcons[i].setAttribute(\"id\",\"\");\n            }\n        if ( modeName==\"teams\" )\n        {\n            downIcons[0].setAttribute(\"id\",\"present-page\");\n           this.setState({mode: modeName});\n        }\n        else if ( modeName==\"mytasks\" )\n        {\n            downIcons[1].setAttribute(\"id\",\"present-page\");\n            this.setState({mode: modeName});\n         \n        }\n        else if ( modeName==\"archives\" )\n        {\n            downIcons[2].setAttribute(\"id\",\"present-page\");\n           this.setState({mode: modeName});\n            \n            \n        }\n        else{\n            console.log(\"cannot set mode\")\n        }\n        \n    }\n    \n    footerLast() \n    {\n        \n         return(\n        <footer className=\"down-nav\">\n    \n        <div className=\"col-lg-5 col-lg-offset-1 col-md-12 down-icon-items\" onClick={() => this.changeMode(\"teams\")}><i className=\"fa fa-slideshare left-icons\"></i>\n            <p className=\"text-center\">Teams </p>\n        </div>\n        <div className=\"col-lg-5 col-lg-offset-1 col-md-12 down-icon-items\" id=\"present-page\" onClick={() => this.changeMode(\"mytasks\")} ><i className=\"fa fa-tasks left-icons\"></i>\n            <p className=\"text-center\">My Tasks</p>\n        </div>\n        <div className=\"col-lg-5 col-lg-offset-1 col-md-12 down-icon-items\" onClick={() => this.changeMode(\"archives\")} ><i className=\"fa fa-history left-icons\"></i>\n            <p className=\"text-center\">Archives </p>\n        </div>\n\n        </footer> \n         );\n        \n                    \n    }\n    \n    bodyCenter()\n    {\n        if ( this.state.mode == \"mytasks\")\n            {\n                var headingName = \"My Tasks\";\n                return(\n                    <div>\n                    <div className=\"col-md-12\">\n                        <h3>{headingName}</h3>\n                        <hr />\n                    </div>\n                    <div className=\"col-md-12\">\n                        <h5 className=\"text-info\">To-Do </h5>\n                        <hr />\n                        <div className=\"row task-row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"task-cards-container\">\n                                    <Tasks addTaskForm= {this.handleTaskForm} type=\"to do\" url={this.state.baseURL} token= {this.state.authToken} uid= {this.state.uid} />\n                                    \n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                \n            \n                    <div className=\"col-md-12\">\n                        <h5 className=\"text-info\"> In Progress</h5>\n                        <hr />\n                        <div className=\"row task-row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"task-cards-container\">\n                                    <Tasks type=\"progress\"/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n            \n                    <div className=\"col-md-12\">\n                        <h5 className=\"text-info\">Completed </h5>\n                        <hr />\n                        <div className=\"row task-row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"task-cards-container\">\n                                    <Tasks type=\"done\"/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    </div>\n                );\n            }\n        //for archives\n        \n        else if ( this.state.mode == \"archives\")\n            {\n                var headingName = \"Archives\";\n                return(\n                <div>\n                    <div className=\"col-md-12\">\n                        <h3>{headingName}</h3>\n                        <hr />\n                    </div>\n                    <Archives />\n                </div>\n                    );\n            }\n        \n        //for teams\n        else if ( this.state.mode == \"teams\")\n            {\n                var headingName = \"My Teams\";\n                return(\n                <div>\n                    <div className=\"col-md-12\">\n                        <h3>{headingName}</h3>\n                        <hr />\n                    </div>\n                    \n                    <Teams />\n                </div>\n                \n                    );\n            }\n        else\n            {\n                var headingName = \"Try Later !!\";\n                return(\n                    <div className=\"col-md-12\">\n                        <h3>{headingName}</h3>\n                        <hr />\n                    </div>\n                    );\n            }\n        \n    }\n\n\n\n    render()\n    {\n       \n        return(\n            <div style={{backgroundColor:\"#f1f1f1\"}}>\n                <Navbar></Navbar>\n                <div className=\"row\" id=\"main-row\">    \n                {this.bodyCenter()}\n                </div>\n                {this.footerLast()}\n             </div>\n        );\n    }\n    componentDidUpdate() \n    {\n    \n    }\n    \n}\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}