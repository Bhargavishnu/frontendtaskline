{"ast":null,"code":"var _jsxFileName = \"/Users/bhargavcn/taskboardproject/src/components/Dashboard.js\";\nimport React from 'react';\nimport Navbar from './Navbar';\nimport TaskCard from './TaskCard';\nimport TeamCard from './TeamCard';\nimport ArchiveCard from './ArchiveCard'; //**************************Taskcard Rendering\n\nclass Tasks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskArray: []\n    };\n  }\n\n  componentDidMount() {\n    //const fetchurl = {this.props.url}+\"/user/\"+{this.props.uid}+\"/tasks/all?key=\"+{this.props.token}\n    const fetchurl = \"https://task-line.herokuapp.com/user/rahul/tasks/all?key=eyJhbGciOiJIUzI1NiJ9.eyJpZCI6InJhaHVsIiwibmFtZSI6InJhaHVsIiwicm9sZSI6ImFkbWluIn0.tYUgIZXi8V4Twq_QdPC1rsfMltaqmCwZRUYhmp8hiEY\";\n    var responseCode = 0;\n    var taskArray = [];\n    var j = 0;\n    fetch(fetchurl).then(res => {\n      responseCode = res.status;\n\n      if (responseCode == 200) {\n        return res.json();\n      }\n    }).then(data => {\n      if (data) {\n        for (var i = 0; i < data.length; i++) {\n          if (data[i][\"progress\"] == this.props.type) {\n            var taskName = data[i][\"name\"].toUpperCase();\n            var taskID = data[i][\"id\"];\n            var taskReport = data[i][\"report_to\"];\n            var taskPriority = data[i][\"priority\"];\n            var taskDue = data[i][\"due_date\"];\n            var taskStart = data[i][\"progress_recorded_on\"];\n            taskArray.push(React.createElement(TaskCard, {\n              key: j,\n              id: taskID,\n              name: taskName,\n              reporter: taskReport,\n              priority: taskPriority,\n              due: taskDue,\n              start: taskStart,\n              displayTask: this.props.displayTask,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 54\n              },\n              __self: this\n            }));\n            j++;\n          }\n        } //push Add new task as last element\n\n\n        if (this.props.type == \"to do\") {\n          taskArray.push(React.createElement(\"div\", {\n            class: \"col-lg-3 col-lg-offset-0 col-md-3 col-sm-5 col-xs-10 add-task-card\",\n            id: \"task-card\",\n            onClick: this.props.addTaskForm,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            class: \"glyphicon glyphicon-plus\",\n            id: \"add-task\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }), React.createElement(\"h1\", {\n            class: \"text-center team-card-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }, \"Add Task \")));\n        }\n\n        this.setState({\n          taskArray\n        });\n      } else {\n        alert(\"Cannot Fetch Data Try Later!!\");\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.state.taskArray);\n  }\n\n} //************************************* TeamsCard Rendering\n\n\nclass Teams extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      teamArray: []\n    };\n  }\n\n  componentDidMount() {\n    //const fetchurl = {this.props.url}+\"/user/\"+{this.props.uid}+\"/teams/all?key=\"+{this.props.token}\n    const fetchurl = \"https://task-line.herokuapp.com/user/rahul/tasks/all?key=eyJhbGciOiJIUzI1NiJ9.eyJpZCI6InJhaHVsIiwibmFtZSI6InJhaHVsIiwicm9sZSI6ImFkbWluIn0.tYUgIZXi8V4Twq_QdPC1rsfMltaqmCwZRUYhmp8hiEY\";\n    var responseCode = 0;\n    var teamArray = [];\n    fetch(fetchurl).then(res => {\n      responseCode = res.status;\n\n      if (responseCode == 200) {\n        return res.json();\n      }\n    }).then(data => {\n      if (data) {\n        for (var i = 0; i < data.length; i++) {\n          var teamName = data[i][\"name\"].toUpperCase();\n          teamArray.push(React.createElement(TeamCard, {\n            key: i,\n            name: teamName,\n            total: \"20\",\n            pending: \"5\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }));\n        }\n\n        this.setState({\n          teamArray\n        });\n      } else {\n        alert(\"Cannot Fetch Data Try Later!!\");\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, this.state.teamArray);\n  }\n\n} //************************************* ArchiverCard Rendering\n\n\nclass Archives extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      archiveArray: []\n    };\n  }\n\n  componentDidMount() {\n    //const fetchurl = {this.props.url}+\"/user/\"+{this.props.uid}+\"/teams/all?key=\"+{this.props.token}\n    const fetchurl = \"https://task-line.herokuapp.com/user/rahul/tasks/all?key=eyJhbGciOiJIUzI1NiJ9.eyJpZCI6InJhaHVsIiwibmFtZSI6InJhaHVsIiwicm9sZSI6ImFkbWluIn0.tYUgIZXi8V4Twq_QdPC1rsfMltaqmCwZRUYhmp8hiEY\";\n    var responseCode = 0;\n    var archiveArray = [];\n    fetch(fetchurl).then(res => {\n      responseCode = res.status;\n\n      if (responseCode == 200) {\n        return res.json();\n      }\n    }).then(data => {\n      if (data) {\n        for (var i = 0; i < data.length; i++) {\n          var archiveName = data[i][\"name\"].toUpperCase();\n          archiveArray.push(React.createElement(ArchiveCard, {\n            key: i,\n            name: archiveName,\n            reporter: \"BHARGAV\",\n            start: \"2020-02-01\",\n            due: \"2020-02-05\",\n            status: \"Completed\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 180\n            },\n            __self: this\n          }));\n        }\n\n        this.setState({\n          archiveArray\n        });\n      } else {\n        alert(\"Cannot Fetch Data Try Later!!\");\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, this.state.archiveArray);\n  }\n\n} //*************************************Main Dashboard \n\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.footerLast = this.footerLast.bind(this);\n    this.render = this.render.bind(this);\n    this.changeMode = this.changeMode.bind(this);\n    this.bodyCenter = this.bodyCenter.bind(this);\n    this.handleTaskForm = this.handleTaskForm.bind(this);\n    this.state = {\n      mode: \"mytasks\",\n      baseURL: this.props.location.state.baseURL,\n      authToken: this.props.location.state.authToken,\n      uid: this.props.location.state.uid,\n      dispForm: false\n    };\n  }\n\n  displayTheTask() {\n    //taskID=event.target.getAttribute(\"title\");\n    var taskName, taskID, taskDescription, taskReport, progress, taskPriority, taskDue, taskStart;\n    var taskID = \"1\";\n    var fetchurl = \"https://task-line.herokuapp.com/user/rahul/tasks/\" + taskID + \"?key=eyJhbGciOiJIUzI1NiJ9.eyJpZCI6InJhaHVsIiwibmFtZSI6InJhaHVsIiwicm9sZSI6ImFkbWluIn0.tYUgIZXi8V4Twq_QdPC1rsfMltaqmCwZRUYhmp8hiEY\";\n    var responseCode = 0;\n    fetch(fetchurl).then(res => {\n      responseCode = res.status;\n\n      if (responseCode == 200) {\n        return res.json();\n      }\n    }).then(data => {\n      if (data) {\n        console.log(JSON.parse(data[0]));\n        taskName = data[0][\"name\"].toUpperCase();\n        taskID = data[0][\"id\"];\n        taskDescription = data[0][\"description\"];\n        taskReport = data[0][\"report_to\"];\n        progress = data[0][\"progress\"];\n        taskPriority = data[0][\"priority\"];\n        taskDue = new Date(data[0][\"due_date\"]);\n        taskStart = new Date(data[0][\"progress_recorded_on\"]);\n      } else {\n        alert(\"Cannot Fetch Data Try Later!!\");\n      }\n    });\n    console.log(taskName);\n    return React.createElement(\"div\", {\n      id: \"addTaskForm\",\n      style: {\n        width: \"80%\",\n        position: \"fixed\",\n        top: \"20vh\",\n        zIndex: \"5\",\n        backgroundColor: \"#0e0e0e\",\n        height: \"70vh\",\n        left: \"10%\",\n        overflowY: \"scroll\",\n        borderRadius: \"10px\",\n        display: \"block\",\n        transition: \"all 0.5s\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"circular ui icon button\",\n      onClick: () => this.handleTaskForm(),\n      style: {\n        position: \"absolute\",\n        left: \"1%\",\n        top: \"0\",\n        zIndex: \"6\",\n        float: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"icon close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui inverted segment\",\n      style: {\n        padding: \"10%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, \" Task Details \"), React.createElement(\"div\", {\n      className: \"ui inverted form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"two fields\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"Task Name\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, taskName)), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \"Report To\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, taskReport))), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, taskDescription)), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, \"Priority\"), React.createElement(\"select\", {\n      multiple: \"\",\n      name: \"priority\",\n      className: \"ui dropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"high\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \"High\"), React.createElement(\"option\", {\n      value: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \"Medium\"), React.createElement(\"option\", {\n      value: \"low\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, \"Low\"))), React.createElement(\"div\", {\n      className: \"two fields\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \"Assigned On\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, taskStart)), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, \"DeadLine\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, taskDue))), React.createElement(\"div\", {\n      className: \"two fields\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui submit button\",\n      onClick: () => this.updateTaskToBase(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, \"Change Details\"), React.createElement(\"div\", {\n      className: \"ui submit button\",\n      onClick: () => this.moveTo(\"done\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, \"Update Progress\"))))));\n  }\n\n  updateTaskBase() {}\n\n  moveTo(status) {}\n\n  handleTaskForm() {\n    if (this.state.dispForm == true) {\n      this.state.dispForm = false;\n      console.log(this.state.dispForm);\n      document.getElementById(\"addTaskForm\").style.display = \"none\";\n    } else if (this.state.dispForm == false) {\n      this.state.dispForm = true;\n      console.log(this.state.dispForm);\n      document.getElementById(\"addTaskForm\").style.display = \"block\";\n    }\n  }\n\n  addTaskToBase() {}\n\n  showForm() {\n    var d = new Date();\n    var day = d.getFullYear() + \"-\" + (d.getMonth() + 1) + \"-\" + d.getDay();\n    return React.createElement(\"div\", {\n      id: \"addTaskForm\",\n      style: {\n        width: \"80%\",\n        position: \"fixed\",\n        top: \"20vh\",\n        zIndex: \"5\",\n        backgroundColor: \"#0e0e0e\",\n        height: \"70vh\",\n        left: \"10%\",\n        overflowY: \"scroll\",\n        borderRadius: \"10px\",\n        display: \"none\",\n        transition: \"all 0.5s\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      class: \"circular ui icon button\",\n      onClick: () => this.handleTaskForm(),\n      style: {\n        position: \"absolute\",\n        left: \"1%\",\n        top: \"0\",\n        zIndex: \"6\",\n        float: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"icon close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"ui inverted segment\",\n      style: {\n        padding: \"10%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, \" Add New Task\"), React.createElement(\"div\", {\n      class: \"ui inverted form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"two fields\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, \"Task Name\"), React.createElement(\"input\", {\n      placeholder: \"Task Name\",\n      name: \"name\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, \"Assigne Name\"), React.createElement(\"input\", {\n      placeholder: \"Assignee Name\",\n      name: \"assignee\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      class: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"textarea\", {\n      name: \"description\",\n      placeholder: \"Description\",\n      style: {\n        marginTop: \"0px\",\n        marginBottom: \"0px\",\n        height: \"20%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, \"Priority\"), React.createElement(\"select\", {\n      multiple: \"\",\n      name: \"priority\",\n      class: \"ui dropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"high\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, \"High\"), React.createElement(\"option\", {\n      value: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, \"Medium\"), React.createElement(\"option\", {\n      value: \"low\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, \"Low\"))), React.createElement(\"div\", {\n      class: \"five wide required field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, \"DeadLine Date\"), React.createElement(\"input\", {\n      type: \"date\",\n      name: \"dueDate\",\n      min: day,\n      placeholder: \"Task DeadLine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"ui submit button\",\n      onClick: () => this.addTaskToBase(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, \"Add Task\")))));\n  }\n\n  changeMode(modeName) {\n    var downIcons = document.getElementsByClassName(\"down-icon-items\");\n\n    if (this.state.mode == modeName) {\n      return;\n    }\n\n    for (var i = 0; i < downIcons.length; i++) {\n      downIcons[i].setAttribute(\"id\", \"\");\n    }\n\n    if (modeName == \"teams\") {\n      downIcons[0].setAttribute(\"id\", \"present-page\");\n      this.setState({\n        mode: modeName\n      });\n    } else if (modeName == \"mytasks\") {\n      downIcons[1].setAttribute(\"id\", \"present-page\");\n      this.setState({\n        mode: modeName\n      });\n    } else if (modeName == \"archives\") {\n      downIcons[2].setAttribute(\"id\", \"present-page\");\n      this.setState({\n        mode: modeName\n      });\n    } else {\n      console.log(\"cannot set mode\");\n    }\n  }\n\n  footerLast() {\n    return React.createElement(\"footer\", {\n      className: \"down-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-5 col-lg-offset-1 col-md-12 down-icon-items\",\n      onClick: () => this.changeMode(\"teams\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-slideshare left-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }, \"Teams \")), React.createElement(\"div\", {\n      className: \"col-lg-5 col-lg-offset-1 col-md-12 down-icon-items\",\n      id: \"present-page\",\n      onClick: () => this.changeMode(\"mytasks\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-tasks left-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, \"My Tasks\")), React.createElement(\"div\", {\n      className: \"col-lg-5 col-lg-offset-1 col-md-12 down-icon-items\",\n      onClick: () => this.changeMode(\"archives\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-history left-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }, \"Archives \")));\n  }\n\n  bodyCenter() {\n    if (this.state.mode == \"mytasks\") {\n      var headingName = \"My Tasks\";\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }, headingName), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      }, \"To-Do \"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row task-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"task-cards-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, React.createElement(Tasks, {\n        displayTask: this.displayTheTask.bind(this),\n        addTaskForm: this.handleTaskForm,\n        type: \"to do\",\n        url: this.state.baseURL,\n        token: this.state.authToken,\n        uid: this.state.uid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      }, \" In Progress\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row task-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"task-cards-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497\n        },\n        __self: this\n      }, React.createElement(Tasks, {\n        type: \"progress\",\n        displayTask: this.displayTheTask,\n        addTaskForm: this.handleTaskForm,\n        url: this.state.baseURL,\n        token: this.state.authToken,\n        uid: this.state.uid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        },\n        __self: this\n      }, \"Completed \"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row task-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"task-cards-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509\n        },\n        __self: this\n      }, React.createElement(Tasks, {\n        type: \"done\",\n        displayTask: this.displayTheTask,\n        url: this.state.baseURL,\n        token: this.state.authToken,\n        uid: this.state.uid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510\n        },\n        __self: this\n      }))))));\n    } //for archives\n    else if (this.state.mode == \"archives\") {\n        var headingName = \"Archives\";\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 524\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-md-12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 525\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 526\n          },\n          __self: this\n        }, headingName), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 527\n          },\n          __self: this\n        })), React.createElement(Archives, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 529\n          },\n          __self: this\n        }));\n      } //for teams\n      else if (this.state.mode == \"teams\") {\n          var headingName = \"My Teams\";\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 539\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"col-md-12\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 540\n            },\n            __self: this\n          }, React.createElement(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 541\n            },\n            __self: this\n          }, headingName), React.createElement(\"hr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 542\n            },\n            __self: this\n          })), React.createElement(Teams, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 545\n            },\n            __self: this\n          }));\n        } else {\n          var headingName = \"Try Later !!\";\n          return React.createElement(\"div\", {\n            className: \"col-md-12\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 554\n            },\n            __self: this\n          }, React.createElement(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 555\n            },\n            __self: this\n          }, headingName), React.createElement(\"hr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 556\n            },\n            __self: this\n          }));\n        }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        backgroundColor: \"#f1f1f1\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      id: \"main-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571\n      },\n      __self: this\n    }, this.bodyCenter()), this.showForm(), this.displayTheTask(), this.footerLast());\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/bhargavcn/taskboardproject/src/components/Dashboard.js"],"names":["React","Navbar","TaskCard","TeamCard","ArchiveCard","Tasks","Component","constructor","props","state","taskArray","componentDidMount","fetchurl","responseCode","j","fetch","then","res","status","json","data","i","length","type","taskName","toUpperCase","taskID","taskReport","taskPriority","taskDue","taskStart","push","displayTask","addTaskForm","setState","alert","render","Teams","teamArray","teamName","Archives","archiveArray","archiveName","Dashboard","footerLast","bind","changeMode","bodyCenter","handleTaskForm","mode","baseURL","location","authToken","uid","dispForm","displayTheTask","taskDescription","progress","console","log","JSON","parse","Date","width","position","top","zIndex","backgroundColor","height","left","overflowY","borderRadius","display","transition","float","padding","updateTaskToBase","moveTo","updateTaskBase","document","getElementById","style","addTaskToBase","showForm","d","day","getFullYear","getMonth","getDay","marginTop","marginBottom","modeName","downIcons","getElementsByClassName","setAttribute","headingName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Navbar from './Navbar';\nimport TaskCard from './TaskCard';\nimport TeamCard from './TeamCard';\nimport ArchiveCard from './ArchiveCard';\n\n\n//**************************Taskcard Rendering\n\n\nclass Tasks extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            taskArray: []\n        }\n    }\n    \n    \n    \n    componentDidMount() {\n        //const fetchurl = {this.props.url}+\"/user/\"+{this.props.uid}+\"/tasks/all?key=\"+{this.props.token}\n        const fetchurl = \"https://task-line.herokuapp.com/user/rahul/tasks/all?key=eyJhbGciOiJIUzI1NiJ9.eyJpZCI6InJhaHVsIiwibmFtZSI6InJhaHVsIiwicm9sZSI6ImFkbWluIn0.tYUgIZXi8V4Twq_QdPC1rsfMltaqmCwZRUYhmp8hiEY\"\n            var responseCode = 0;\n            var taskArray = [];\n            var j=0\n            fetch(fetchurl)\n            .then(res => \n                  { \n                responseCode = res.status;\n\n                    if (responseCode == 200 )\n                        {\n                            return res.json(); \n                        }\n                  })\n            .then( data => \n                  {\n                        if ( data )\n                            {\n                                for( var i=0; i<data.length; i++)\n                                    {\n                                        if (data[i][\"progress\"] == this.props.type)\n                                            {\n                                                \n                                                var taskName = data[i][\"name\"].toUpperCase();\n                                                var taskID = data[i][\"id\"];\n                                                var taskReport = data[i][\"report_to\"];\n                                                var taskPriority = data[i][\"priority\"];\n                                                var taskDue = data[i][\"due_date\"];\n                                                var taskStart = data[i][\"progress_recorded_on\"];\n\n                                                taskArray.push(\n                                                    <TaskCard key={j} id={taskID} name={taskName} reporter={taskReport} priority={taskPriority} due={taskDue} start={taskStart} displayTask={this.props.displayTask} /> \n                                                              );\n                                                j++;\n\n                                            }\n\n                                    }\n                                //push Add new task as last element\n                                \n                                if (this.props.type == \"to do\")\n                                {taskArray.push(<div class=\"col-lg-3 col-lg-offset-0 col-md-3 col-sm-5 col-xs-10 add-task-card\" id=\"task-card\" onClick={this.props.addTaskForm} >\n                                        <i class=\"glyphicon glyphicon-plus\" id=\"add-task\"></i>\n                                        <h1 class=\"text-center team-card-title\">Add Task </h1>\n                                        </div>\n                                        );\n                                }\n                                    this.setState({taskArray});\n                            \n                            }\n\n                        else\n                        {\n                            alert(\"Cannot Fetch Data Try Later!!\");\n                        }\n                });\n         \n    }\n    \n    render() {\n        return <div>{this.state.taskArray}</div>\n    }\n}\n\n\n//************************************* TeamsCard Rendering\n\n\nclass Teams extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            teamArray: []\n        }\n    }\n    \n    componentDidMount() {\n        //const fetchurl = {this.props.url}+\"/user/\"+{this.props.uid}+\"/teams/all?key=\"+{this.props.token}\n        const fetchurl = \"https://task-line.herokuapp.com/user/rahul/tasks/all?key=eyJhbGciOiJIUzI1NiJ9.eyJpZCI6InJhaHVsIiwibmFtZSI6InJhaHVsIiwicm9sZSI6ImFkbWluIn0.tYUgIZXi8V4Twq_QdPC1rsfMltaqmCwZRUYhmp8hiEY\"\n            var responseCode = 0;\n            var teamArray = [];\n            fetch(fetchurl)\n            .then(res => \n                  { \n                responseCode = res.status;\n\n                    if (responseCode == 200 )\n                        {\n                            return res.json(); \n                        }\n                  })\n            .then( data => \n                  {\n                        if ( data )\n                            {\n                                for( var i=0; i<data.length; i++)\n                                    {\n                                        var teamName = data[i][\"name\"].toUpperCase();\n\n                                        teamArray.push(\n                                             <TeamCard key={i} name={teamName} total=\"20\" pending = \"5\"/> \n                                                        );\n\n                                    }\n\n                                this.setState({teamArray});\n                            }\n\n                        else\n                        {\n                            alert(\"Cannot Fetch Data Try Later!!\");\n                        }\n                });\n         \n    }\n    \n    render() {\n        return <div>{this.state.teamArray}</div>\n    }\n}\n\n\n//************************************* ArchiverCard Rendering\n\n\nclass Archives extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            archiveArray: []\n        }\n    }\n    \n    componentDidMount() {\n        //const fetchurl = {this.props.url}+\"/user/\"+{this.props.uid}+\"/teams/all?key=\"+{this.props.token}\n        const fetchurl = \"https://task-line.herokuapp.com/user/rahul/tasks/all?key=eyJhbGciOiJIUzI1NiJ9.eyJpZCI6InJhaHVsIiwibmFtZSI6InJhaHVsIiwicm9sZSI6ImFkbWluIn0.tYUgIZXi8V4Twq_QdPC1rsfMltaqmCwZRUYhmp8hiEY\"\n            var responseCode = 0;\n            var archiveArray = [];\n            fetch(fetchurl)\n            .then(res => \n                  { \n                responseCode = res.status;\n\n                    if (responseCode == 200 )\n                        {\n                            return res.json(); \n                        }\n                  })\n            .then( data => \n                  {\n                        if ( data )\n                            {\n                                for( var i=0; i<data.length; i++)\n                                    {\n                                        var archiveName = data[i][\"name\"].toUpperCase();\n\n                                        archiveArray.push(\n                                             <ArchiveCard key={i} name={archiveName} reporter=\"BHARGAV\" start=\"2020-02-01\" due=\"2020-02-05\"  status=\"Completed\"/> \n                                                        );\n\n                                    }\n\n                                this.setState({archiveArray});\n                            }\n\n                        else\n                        {\n                            alert(\"Cannot Fetch Data Try Later!!\");\n                        }\n                });\n         \n    }\n    \n    render() {\n        return <div>{this.state.archiveArray}</div>\n    }\n}\n\n\n//*************************************Main Dashboard \n\n\n\nclass Dashboard extends React.Component{\n   \n    constructor(props)\n    {\n        super(props);\n        this.footerLast = this.footerLast.bind(this);\n        this.render = this.render.bind(this);\n        this.changeMode = this.changeMode.bind(this);\n        this.bodyCenter = this.bodyCenter.bind(this);\n        this.handleTaskForm = this.handleTaskForm.bind(this);\n        this.state={mode: \"mytasks\", baseURL: this.props.location.state.baseURL , authToken : this.props.location.state.authToken , uid : this.props.location.state.uid , dispForm: false};\n        \n        \n    }\n    \n    \n    displayTheTask()\n    {\n        //taskID=event.target.getAttribute(\"title\");\n        var taskName,taskID ,taskDescription ,taskReport, progress, taskPriority,taskDue,taskStart;\n        var taskID=\"1\";\n        var fetchurl=\"https://task-line.herokuapp.com/user/rahul/tasks/\"+taskID+\"?key=eyJhbGciOiJIUzI1NiJ9.eyJpZCI6InJhaHVsIiwibmFtZSI6InJhaHVsIiwicm9sZSI6ImFkbWluIn0.tYUgIZXi8V4Twq_QdPC1rsfMltaqmCwZRUYhmp8hiEY\"\n        \n        var responseCode = 0; \n        fetch(fetchurl)\n            .then(res => \n                  { \n                responseCode = res.status;\n\n                    if (responseCode == 200 )\n                        {\n                            return res.json(); \n                        }\n                  })\n            .then( data => \n                  {\n                        if ( data )\n                            {               \n                                console.log(JSON.parse(data[0]));\n                                taskName = data[0][\"name\"].toUpperCase();\n                                taskID = data[0][\"id\"];\n                                taskDescription = data[0][\"description\"];\n                                taskReport = data[0][\"report_to\"];\n                                progress = data[0][\"progress\"];\n                                taskPriority = data[0][\"priority\"];\n                                taskDue = new Date(data[0][\"due_date\"]);\n                                taskStart = new Date(data[0][\"progress_recorded_on\"]);\n                                \n                                \n                                \n\n                            }\n                                \n                    \n\n                        else\n                        {\n                            alert(\"Cannot Fetch Data Try Later!!\");\n                        }\n                });\n        \n        console.log(taskName)\n        return(\n                                    \n    <div id=\"addTaskForm\" style={{width:\"80%\",position:\"fixed\",top:\"20vh\",zIndex:\"5\",backgroundColor:\"#0e0e0e\",height:\"70vh\",left:\"10%\",overflowY:\"scroll\",borderRadius:\"10px\",display:\"block\",transition:\"all 0.5s\"}}>\n            <button className=\"circular ui icon button\" onClick={() => this.handleTaskForm()} style={{position:\"absolute\",left:\"1%\",top:\"0\",zIndex:\"6\",float:\"left\"}}>\n                <i className=\"icon close\"></i>\n            </button>\n            <form>\n               <div className=\"ui inverted segment\" style={{padding:\"10%\"}}>\n               \n                <h3> Task Details </h3>\n                <div className=\"ui inverted form\">\n                    <div className=\"two fields\">\n                        <div className=\"field\">\n                        <label>Task Name</label>\n                        <p>{taskName}</p>\n                        </div>\n                        <div className=\"field\">\n                        <label>Report To</label>\n                         <p>{taskReport}</p>\n                        </div>\n                    </div>\n                    <div className=\"field\">\n                        <label>Description</label>\n                        <p>{taskDescription}</p>\n                    </div>\n                    <div className=\"field\">\n                        <label>Priority</label>\n                        <select multiple=\"\"name=\"priority\" className=\"ui dropdown\">\n                            <option value=\"high\">High</option>\n                            <option value=\"medium\">Medium</option>\n                            <option value=\"low\">Low</option>\n                        </select>\n                    </div>\n                    <div className=\"two fields\">\n                        <div className=\"field\">\n                        <label>Assigned On</label>\n                        <p>{taskStart}</p>\n                        </div>\n                        <div className=\"field\">\n                        <label>DeadLine</label>\n                         <p>{taskDue}</p>\n                        </div>\n                    </div>\n                    <div className=\"two fields\">\n                        <div className=\"ui submit button\" onClick={() => this.updateTaskToBase()}>Change Details</div>\n                        <div className=\"ui submit button\" onClick={() => this.moveTo(\"done\")}>Update Progress</div>\n                    </div>   \n                </div>\n            </div>\n        </form>\n        </div>   \n                                );\n        \n    }\n    \n    updateTaskBase()\n    {\n    \n    }\n\n    moveTo(status)\n    {\n    \n    }\n   handleTaskForm()\n    {\n        if(this.state.dispForm == true)\n            {\n                this.state.dispForm = false;\n                console.log(this.state.dispForm)\n                document.getElementById(\"addTaskForm\").style.display=\"none\";\n                \n            }\n         else if(this.state.dispForm == false)\n            {\n                this.state.dispForm = true;\n                console.log(this.state.dispForm)\n                document.getElementById(\"addTaskForm\").style.display=\"block\";\n                \n            }\n            \n    }\n    \n    addTaskToBase()\n    {\n        \n    }\n    \n    \n    showForm()\n    {\n        var d = new Date();\n        var day = d.getFullYear()+\"-\"+(d.getMonth()+1)+\"-\"+d.getDay();\n        \n        \n        return(\n        <div id=\"addTaskForm\" style={{width:\"80%\",position:\"fixed\",top:\"20vh\",zIndex:\"5\",backgroundColor:\"#0e0e0e\",height:\"70vh\",left:\"10%\",overflowY:\"scroll\",borderRadius:\"10px\",display:\"none\",transition:\"all 0.5s\"}}>\n             <button class=\"circular ui icon button\" onClick={() => this.handleTaskForm()} style={{position:\"absolute\",left:\"1%\",top:\"0\",zIndex:\"6\",float:\"left\"}}>\n                    <i class=\"icon close\"></i>\n            </button>\n            <form>\n            <div class=\"ui inverted segment\" style={{padding:\"10%\"}}>\n               \n                <h3> Add New Task</h3>\n                <div class=\"ui inverted form\">\n                    <div class=\"two fields\">\n                        <div class=\"field\">\n                        <label>Task Name</label>\n                        <input placeholder=\"Task Name\" name=\"name\" type=\"text\" />\n                        </div>\n                        <div class=\"field\">\n                        <label>Assigne Name</label>\n                        <input placeholder=\"Assignee Name\" name= \"assignee\" type=\"text\"/> \n                        </div>\n                    </div>\n                    <div class=\"field\">\n                        <label>Description</label>\n                        <textarea name=\"description\" placeholder= \"Description\" style={{marginTop: \"0px\" ,marginBottom: \"0px\", height: \"20%\"}}></textarea>\n                    </div>\n                    <div class=\"field\">\n                        <label>Priority</label>\n                        <select multiple=\"\"name=\"priority\" class=\"ui dropdown\">\n                            <option value=\"high\">High</option>\n                            <option value=\"medium\">Medium</option>\n                            <option value=\"low\">Low</option>\n                        </select>\n                    </div>\n                    <div class=\"five wide required field\">\n                        <label>DeadLine Date</label>\n                        <input type=\"date\" name=\"dueDate\" min={day} placeholder=\"Task DeadLine\" />\n                    </div>\n                    <div class=\"ui submit button\" onClick={() => this.addTaskToBase()}>Add Task</div>\n                </div>\n            </div>\n        </form>\n        </div>\n        \n        \n        )\n    }\n    \n    \n    changeMode(modeName)\n    {\n        var downIcons = document.getElementsByClassName(\"down-icon-items\");\n        if (this.state.mode == modeName )\n            {\n                return\n            }\n        for (var i=0;i<downIcons.length;i++)\n            {\n                downIcons[i].setAttribute(\"id\",\"\");\n            }\n        if ( modeName==\"teams\" )\n        {\n            downIcons[0].setAttribute(\"id\",\"present-page\");\n           this.setState({mode: modeName});\n        }\n        else if ( modeName==\"mytasks\" )\n        {\n            downIcons[1].setAttribute(\"id\",\"present-page\");\n            this.setState({mode: modeName});\n         \n        }\n        else if ( modeName==\"archives\" )\n        {\n            downIcons[2].setAttribute(\"id\",\"present-page\");\n           this.setState({mode: modeName});\n            \n            \n        }\n        else{\n            console.log(\"cannot set mode\")\n        }\n        \n    }\n    \n    footerLast() \n    {\n        \n         return(\n        <footer className=\"down-nav\">\n    \n        <div className=\"col-lg-5 col-lg-offset-1 col-md-12 down-icon-items\" onClick={() => this.changeMode(\"teams\")}><i className=\"fa fa-slideshare left-icons\"></i>\n            <p className=\"text-center\">Teams </p>\n        </div>\n        <div className=\"col-lg-5 col-lg-offset-1 col-md-12 down-icon-items\" id=\"present-page\" onClick={() => this.changeMode(\"mytasks\")} ><i className=\"fa fa-tasks left-icons\"></i>\n            <p className=\"text-center\">My Tasks</p>\n        </div>\n        <div className=\"col-lg-5 col-lg-offset-1 col-md-12 down-icon-items\" onClick={() => this.changeMode(\"archives\")} ><i className=\"fa fa-history left-icons\"></i>\n            <p className=\"text-center\">Archives </p>\n        </div>\n\n        </footer> \n         );\n        \n                    \n    }\n    \n    bodyCenter()\n    {\n        if ( this.state.mode == \"mytasks\")\n            {\n                var headingName = \"My Tasks\";\n                return(\n                    <div>\n                    <div className=\"col-md-12\">\n                        <h3>{headingName}</h3>\n                        <hr />\n                    </div>\n                    <div className=\"col-md-12\">\n                        <h5 className=\"text-info\">To-Do </h5>\n                        <hr />\n                        <div className=\"row task-row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"task-cards-container\">\n                                    <Tasks displayTask={this.displayTheTask.bind(this)} addTaskForm= {this.handleTaskForm} type=\"to do\" url={this.state.baseURL} token= {this.state.authToken} uid= {this.state.uid} />\n                                    \n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                \n            \n                    <div className=\"col-md-12\">\n                        <h5 className=\"text-info\"> In Progress</h5>\n                        <hr />\n                        <div className=\"row task-row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"task-cards-container\">\n                                    <Tasks type=\"progress\" displayTask = {this.displayTheTask} addTaskForm= {this.handleTaskForm} url={this.state.baseURL} token= {this.state.authToken} uid= {this.state.uid}/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n            \n                    <div className=\"col-md-12\">\n                        <h5 className=\"text-info\">Completed </h5>\n                        <hr />\n                        <div className=\"row task-row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"task-cards-container\">\n                                    <Tasks type=\"done\" displayTask = {this.displayTheTask} url={this.state.baseURL} token= {this.state.authToken} uid= {this.state.uid}/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    </div>\n                );\n            }\n        //for archives\n        \n        else if ( this.state.mode == \"archives\")\n            {\n                var headingName = \"Archives\";\n                return(\n                <div>\n                    <div className=\"col-md-12\">\n                        <h3>{headingName}</h3>\n                        <hr />\n                    </div>\n                    <Archives />\n                </div>\n                    );\n            }\n        \n        //for teams\n        else if ( this.state.mode == \"teams\")\n            {\n                var headingName = \"My Teams\";\n                return(\n                <div>\n                    <div className=\"col-md-12\">\n                        <h3>{headingName}</h3>\n                        <hr />\n                    </div>\n                    \n                    <Teams />\n                </div>\n                \n                    );\n            }\n        else\n            {\n                var headingName = \"Try Later !!\";\n                return(\n                    <div className=\"col-md-12\">\n                        <h3>{headingName}</h3>\n                        <hr />\n                    </div>\n                    );\n            }\n        \n    }\n\n\n\n    render()\n    {\n       \n        return(\n            <div style={{backgroundColor:\"#f1f1f1\"}}>\n                <Navbar></Navbar>\n                <div className=\"row\" id=\"main-row\">    \n                {this.bodyCenter()}\n                </div>\n                {this.showForm()}\n                {this.displayTheTask()}\n                {this.footerLast()}\n             </div>\n        );\n    }\n  \n    \n}\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}